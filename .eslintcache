[{"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\index.js":"1","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\App.js":"2","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\app\\store.js":"3","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Sidebar.js":"4","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Body.js":"5","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\firebase.js":"6","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Header.js":"7","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\CreateClient.js":"8","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Client.js":"9","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\clientSlice.js":"10","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\SidebarOption.js":"11","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientRow.js":"12","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditClient.js":"13","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartRow.js":"14","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\partSlice.js":"15","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditPart.js":"16","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientPart.js":"17","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartList.js":"18","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientList.js":"19","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsZone.js":"20","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsList.js":"21","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\whsSlice.js":"22","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsRow.js":"23","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\zoneSlice.js":"24","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneList.js":"25","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneRow.js":"26","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditWhs.js":"27","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditZone.js":"28","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Receipts.js":"29","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Snackbar.js":"30","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Etiqueta.js":"31","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\receiptSlice.js":"32","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\userSlice.js":"33","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Login.js":"34","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\components\\Dashboard.js":"35","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\carrierSlice.js":"36","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\supplierSlice.js":"37","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\uomSlice.js":"38","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\CreateOrders.js":"39","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\ListOrders.js":"40","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\Table.js":"41","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\LoadOrders.js":"42","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\admin\\AdminHome.js":"43"},{"size":360,"mtime":1611689664369,"results":"44","hashOfConfig":"45"},{"size":4099,"mtime":1613755163478,"results":"46","hashOfConfig":"45"},{"size":858,"mtime":1613406631506,"results":"47","hashOfConfig":"45"},{"size":2388,"mtime":1613759155165,"results":"48","hashOfConfig":"45"},{"size":304,"mtime":1611689664356,"results":"49","hashOfConfig":"45"},{"size":741,"mtime":1612297560172,"results":"50","hashOfConfig":"45"},{"size":7826,"mtime":1613690465416,"results":"51","hashOfConfig":"45"},{"size":4842,"mtime":1611846719549,"results":"52","hashOfConfig":"45"},{"size":7036,"mtime":1612388852210,"results":"53","hashOfConfig":"45"},{"size":1623,"mtime":1613441280087,"results":"54","hashOfConfig":"45"},{"size":433,"mtime":1611689664366,"results":"55","hashOfConfig":"45"},{"size":3580,"mtime":1612368417204,"results":"56","hashOfConfig":"45"},{"size":4821,"mtime":1612301087742,"results":"57","hashOfConfig":"45"},{"size":3203,"mtime":1612797701442,"results":"58","hashOfConfig":"45"},{"size":1321,"mtime":1613253062388,"results":"59","hashOfConfig":"45"},{"size":5199,"mtime":1612449935232,"results":"60","hashOfConfig":"45"},{"size":289,"mtime":1613402333378,"results":"61","hashOfConfig":"45"},{"size":3289,"mtime":1613402304445,"results":"62","hashOfConfig":"45"},{"size":3166,"mtime":1613402572324,"results":"63","hashOfConfig":"45"},{"size":308,"mtime":1612537752848,"results":"64","hashOfConfig":"45"},{"size":3004,"mtime":1613330710511,"results":"65","hashOfConfig":"45"},{"size":1519,"mtime":1613441340470,"results":"66","hashOfConfig":"45"},{"size":3063,"mtime":1612536898816,"results":"67","hashOfConfig":"45"},{"size":1321,"mtime":1613403047185,"results":"68","hashOfConfig":"45"},{"size":3272,"mtime":1612800915308,"results":"69","hashOfConfig":"45"},{"size":2889,"mtime":1612628877057,"results":"70","hashOfConfig":"45"},{"size":4748,"mtime":1612625159639,"results":"71","hashOfConfig":"45"},{"size":5206,"mtime":1612626557378,"results":"72","hashOfConfig":"45"},{"size":22215,"mtime":1613423006340,"results":"73","hashOfConfig":"45"},{"size":1605,"mtime":1612821064374,"results":"74","hashOfConfig":"45"},{"size":4335,"mtime":1613176748685,"results":"75","hashOfConfig":"45"},{"size":765,"mtime":1612982874195,"results":"76","hashOfConfig":"45"},{"size":520,"mtime":1613054341753,"results":"77","hashOfConfig":"45"},{"size":1094,"mtime":1613055559903,"results":"78","hashOfConfig":"45"},{"size":4351,"mtime":1613498270425,"results":"79","hashOfConfig":"45"},{"size":1399,"mtime":1613403541300,"results":"80","hashOfConfig":"45"},{"size":1428,"mtime":1613403943167,"results":"81","hashOfConfig":"45"},{"size":1283,"mtime":1613406610157,"results":"82","hashOfConfig":"45"},{"size":2246,"mtime":1613688486473,"results":"83","hashOfConfig":"45"},{"size":2357,"mtime":1613744785205,"results":"84","hashOfConfig":"45"},{"size":1659,"mtime":1613685644650,"results":"85","hashOfConfig":"45"},{"size":5895,"mtime":1613748824243,"results":"86","hashOfConfig":"45"},{"size":1463,"mtime":1613760698280,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"9jinjv",{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\index.js",[],["191","192"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\App.js",["193","194","195","196","197","198"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\app\\store.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Sidebar.js",["199","200","201","202","203","204"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Body.js",["205"],"import React from 'react'\r\nimport './Body.css'\r\nimport Header from './Header'\r\nimport Client from './Client'\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className='body'>\r\n            {/* <Header />   */}\r\n            <Client header={\"Clientes\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n",["206","207"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\firebase.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Header.js",["208","209","210","211","212","213","214","215","216","217","218","219","220"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\CreateClient.js",["221"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Client.js",["222","223","224","225","226","227"],"import React, { useEffect, useState } from 'react'\r\nimport './Client.css'\r\nimport ClientRow from './ClientRow'\r\nimport PartRow from './PartRow'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openCreateClient, selectOpenClient, changeToEdit, changeToAdd } from './features/clientSlice'\r\nimport { openCreatePart, selectOpenPart, changeToEditP, changeToAddP } from './features/partSlice'\r\nimport { db } from './firebase';\r\n\r\n\r\n\r\nfunction Client({ header }) {\r\n    const dispatch = useDispatch()\r\n    const selectedClient = useSelector(selectOpenClient)\r\n\r\n    const [clients, setClients] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(() => {\r\n        db.collection('clients')\r\n            .orderBy('clientName', 'asc')\r\n            .onSnapshot(snapshot =>\r\n                setClients(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            )\r\n    }, [])\r\n\r\n    const [parts, setParts] = useState([])\r\n    const [filterP, setFilterP] = useState('')\r\n\r\n    useEffect(() => {\r\n        db.collection('parts')\r\n            // .where('clientId', '==', 'djBwgyZYFee0SVAuBIfl')\r\n            .orderBy('partName', 'asc')\r\n            .onSnapshot(snapshot =>\r\n                setParts(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            )\r\n    }, [])\r\n\r\n    function filterChange(e) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function filterChangeP(e) {\r\n        setFilterP(e.target.value)\r\n    }\r\n    // clients.filter(c => c.data.rfc.includes('E'))\r\n    // console.log(clients.filter(c => c.data.rfc.includes('E')))\r\n    function editClient(client) {\r\n        if (selectedClient?.Id) {\r\n            dispatch(changeToEdit())\r\n            dispatch(openCreateClient())\r\n        }\r\n    }\r\n    function addClient() {\r\n        dispatch(openCreateClient())\r\n        dispatch(changeToAdd())\r\n    }\r\n\r\n    function addPart() {\r\n        dispatch(openCreatePart())\r\n        dispatch(changeToAddP())\r\n    }\r\n\r\n    return (\r\n        <div className=\"client\">\r\n\r\n            <div className=\"clientMain\">\r\n\r\n                <div className=\"headerMain\">\r\n                    <div className=\"headerRow\">\r\n                        <div className=\"headerSearch\">\r\n                            <input\r\n                                placeholder='Buscar Cliente...'\r\n                                onChange={filterChange}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clientHeader\">\r\n                        <p style={{ marginLeft: '20px' }}>Clientes</p>\r\n                        {/* <div className=\"clientNameHeader\"> */}\r\n                        <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                            {selectedClient?.Name}</p>\r\n                        {/* </div> */}\r\n\r\n                        <IconButton className=\"\">\r\n                            <div className=\"\" >\r\n                                <AddCircleIcon onClick={addClient} className=\"addPartIcon\" />\r\n                            </div>\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"listMain\">\r\n                    <div className=\"clientList\">\r\n\r\n                        <div className=\"clientListRows\">\r\n                            {clients.filter(c => c.data.clientName.includes(filter)).map(({ id, data: { clientName, dir1, dir2, dir3, rfc, timestamp }\r\n                            }) => (\r\n                                <ClientRow\r\n                                    Id={id}\r\n                                    key={id}\r\n                                    Name={clientName}\r\n                                    dir1={dir1}\r\n                                    dir2={dir2}\r\n                                    dir3={dir3}\r\n                                    rfc={rfc}\r\n                                    time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"clientSecondary\">\r\n                <div className=\"headerSecondary\">\r\n                    <div className=\"clientDetails\">\r\n                        <div className=\"headerRow\">\r\n                            <div className=\"headerSearch\">\r\n                                <input\r\n                                    placeholder='Buscar Parte...'\r\n                                    onChange={filterChangeP}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clientDetailsHeader\">\r\n                            <p style={{ marginLeft: '20px' }}>Partes</p>\r\n                            {/* <div className=\"clientNameHeader\"> */}\r\n                            <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                                {selectedClient?.Name}</p>\r\n                            {/* </div> */}\r\n\r\n                            <IconButton className=\"\">\r\n                                <div className=\"\" >\r\n                                    <AddCircleIcon onClick={addPart} className=\"addPartIcon\" />\r\n                                </div>\r\n                            </IconButton>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"partListRows\">\r\n                        {parts.filter(c => c.data.partName.includes(filterP)).map(({ id, data: { partName, desc, model, nom, coo, clientId, timestamp }\r\n                        }) => (\r\n                            <PartRow\r\n                                Id={id}\r\n                                key={id}\r\n                                Name={partName}\r\n                                desc={desc}\r\n                                model={model}\r\n                                nom={nom}\r\n                                coo={coo}\r\n                                clientId={clientId}\r\n                                time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\clientSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\SidebarOption.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientRow.js",["228","229","230"],"import React from 'react'\r\nimport './ClientRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectClient } from './features/clientSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { openCreateClient, changeToEdit, selectOpenClient, } from './features/clientSlice'\r\n\r\n\r\n\r\nfunction ClientRow({ Id, Name, dir1, dir2, dir3, rfc }) {\r\n    const selectedClient = useSelector(selectOpenClient)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openClient = () => {\r\n        dispatch(\r\n            selectClient({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                rfc,\r\n            })\r\n        );\r\n    }\r\n\r\n    function deleteClient() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Cliente?\")) {\r\n            db.collection(\"clients\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectClient({\r\n                    Id: null,\r\n                    Name: null,\r\n                    dir1: null,\r\n                    dir2: null,\r\n                    dir3: null,\r\n                    rfc: null,\r\n                })\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    function editClient(client) {\r\n        dispatch(\r\n            selectClient({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                rfc,\r\n            })\r\n        );\r\n        dispatch(changeToEdit())\r\n        dispatch(openCreateClient())\r\n        // if (selectedClient?.Id) {\r\n        //    dispatch(changeToEdit())\r\n        //    dispatch(openCreateClient())    \r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientRow\">\r\n            <div className=\"clientRowIcons\">\r\n                {/* <IconButton className=\"clientRowIconsColor\">\r\n                    <div onClick={openClient} className=\"editIcon\">\r\n                        <ListAltIcon className=\"clientRowEditIcon\" />\r\n                    </div>\r\n                </IconButton> */}\r\n                <IconButton>\r\n                    {/* <div className=\"\" > */}\r\n                    <EditIcon\r\n                        className=\"clientDetailsEditIcon\"\r\n                        onClick={() => editClient(selectedClient?.Id)}\r\n                    />\r\n                    {/* </div> */}\r\n                </IconButton>\r\n                <IconButton className=\"clientRowIconsColor\">\r\n                    <div className=\"deleteIcon\" onClick={deleteClient}>\r\n                        <DeleteIcon className=\"clientRowDeleteIcon\" />\r\n                    </div>\r\n                </IconButton>\r\n\r\n            </div>\r\n            {/* <div className=\"clientRowId\">{Id}</div> */}\r\n            <div className=\"clientRowName\"\r\n                onClick={openClient}\r\n                style={{ cursor: 'pointer' }}\r\n            >{Name}</div>\r\n            {/* <div className=\"clientRowDescription\">{Description}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditClient.js",["231"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditClient.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateClient, selectEditMode, selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditClient() {\r\n    const editMode = useSelector(selectEditMode)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [clientName, setClientName] = useState(editMode ? selectedClient?.Name : '');\r\n    const [dir1, setDir1] = useState(editMode ? selectedClient?.dir1 : '');\r\n    const [dir2, setDir2] = useState(editMode ? selectedClient?.dir2 : '');\r\n    const [dir3, setDir3] = useState(editMode ? selectedClient?.dir3 : '');\r\n    const [rfc, setRFC] = useState(editMode ? selectedClient?.rfc : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedClient.Id;\r\n            db.collection('clients').doc(doc).set({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('clients').add({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function clientClose() {\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    return (<div className=\"createClient\">\r\n        <div className=\"createClient__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Cliente</h3>\r\n            <CloseIcon\r\n                className=\"createClient__close\"\r\n                onClick={clientClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Cliente:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='clientName'\r\n                type=\"text\"\r\n                value={clientName}\r\n                onChange={(e) => setClientName(e.target.value)}\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.clientName && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 1:</p>\r\n            </div>\r\n            <input\r\n                name='dir1'\r\n                value={dir1}\r\n                onChange={(e) => setDir1(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.dir1 && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 2:</p>\r\n            </div>\r\n            <input\r\n                name='dir2'\r\n                onChange={(e) => setDir2(e.target.value)}\r\n                value={dir2}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 3:</p>\r\n            </div>\r\n            <input\r\n                name='dir3'\r\n                value={dir3}\r\n                onChange={(e) => setDir3(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>RFC:</p>\r\n            </div>\r\n            <input\r\n                name='rfc'\r\n                value={rfc}\r\n                onChange={(e) => setRFC(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.rfc && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"createClient__options\">\r\n                <Button\r\n                    className=\"createClient__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditClient;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartRow.js",["232","233","234"],"import React from 'react'\r\nimport './PartRow.css'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectPart, changeToEditP, openCreatePart, selectOpenPart } from './features/partSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { selectOpenClient, } from './features/clientSlice'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nfunction PartRow({ Id, Name, desc, model, nom, coo, clientId }) {\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const selectedPart = useSelector(selectOpenPart)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openPart = () => {\r\n        dispatch(\r\n            selectPart({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                model,\r\n                nom,\r\n                coo,\r\n                clientId,\r\n            })\r\n        );\r\n        // history.push(\"/mail\")\r\n        // console.log (Id, Name, dir1, dir2, dir3, rfc)\r\n\r\n    }\r\n\r\n    function deletePart() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Parte: \" + Name + \"?\")) {\r\n            db.collection(\"parts\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectPart({\r\n                    Id: null,\r\n                    Name,\r\n                    desc,\r\n                    model,\r\n                    nom,\r\n                    coo,\r\n                    clientId,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function editPart(client) {\r\n        dispatch(\r\n            selectPart({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                model,\r\n                nom,\r\n                coo,\r\n                clientId,\r\n            })\r\n        );\r\n        dispatch(changeToEditP())\r\n        dispatch(openCreatePart())\r\n    }\r\n\r\n    if (selectedClient?.Id === clientId) {\r\n        return (\r\n            <div className=\"partRow\">\r\n                <div className=\"partRowIcons\">                   \r\n                    <IconButton>\r\n                        <EditIcon\r\n                            className=\"clientDetailsEditIcon\"\r\n                            onClick={() => editPart(selectedPart?.Id)}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton className=\"partRowIconsColor\">\r\n                        <div className=\"deleteIcon\" onClick={deletePart}>\r\n                            <DeleteIcon className=\"partRowDeleteIcon\"\r\n                            />\r\n\r\n                        </div>\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"partRowName\"><strong>{Name}</strong> {\" - \" + desc.substring(0, 30) + \"...\"}</div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (null)\r\n    }\r\n}\r\n\r\nexport default PartRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\partSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditPart.js",["235"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditPart.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreatePart, selectEditModeP, selectOpenPart } from './features/partSlice'\r\nimport { selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditPart() {\r\n    const editMode = useSelector(selectEditModeP)\r\n    const selectedPart = useSelector(selectOpenPart)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [partName, setPartName] = useState(editMode ? selectedPart?.Name : '');\r\n    const [desc, setDesc] = useState(editMode ? selectedPart?.desc : '');\r\n    const [model, setModel] = useState(editMode ? selectedPart?.model : '');\r\n    const [nom, setNOM] = useState(editMode ? selectedPart?.nom : '');\r\n    const [coo, setCOO] = useState(editMode ? selectedPart?.coo : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedPart.Id;\r\n            db.collection('parts').doc(doc).set({\r\n                partName: formData.partName,\r\n                desc: formData.desc,\r\n                model: formData.model,\r\n                nom: formData.nom,\r\n                coo: formData.coo,\r\n                clientId: selectedClient.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('parts').add({\r\n                partName: formData.partName,\r\n                desc: formData.desc,\r\n                model: formData.model,\r\n                nom: formData.nom,\r\n                coo: formData.coo,\r\n                clientId: selectedClient.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreatePart())\r\n        // const selectedPart = useSelector(selectOpenPart)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function partClose() {\r\n        dispatch(closeCreatePart())\r\n    }\r\n\r\n    console.log(\"editModeAddPart:\", editMode)\r\n\r\n\r\n    return (<div className=\"createPart\">\r\n        <div className=\"createPart__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Parte</h3>\r\n            <CloseIcon\r\n                className=\"createPart__close\"\r\n                onClick={partClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Número:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='partName'\r\n                type=\"text\"\r\n                value={partName}\r\n                onChange={(e) => setPartName(e.target.value)}\r\n                ref={register({ required: true })}\r\n                tabindex=\"0\"\r\n            />\r\n            {errors.partName && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Descripción</p>\r\n            </div>\r\n            <input\r\n                name='desc'\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.desc && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Modelo:</p>\r\n            </div>\r\n            <input\r\n                name='model'\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>NOM:</p>\r\n            </div>\r\n            <input\r\n                name='nom'\r\n                value={nom}\r\n                onChange={(e) => setNOM(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.nom && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>País de Origen:</p>\r\n            </div>\r\n            <input\r\n                name='coo'\r\n                value={coo}\r\n                onChange={(e) => setCOO(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.coo && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n\r\n            <div className=\"createPart__options\">\r\n                <Button\r\n                    className=\"createPart__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditPart;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientPart.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartList.js",["236","237","238","239","240"],"import './ClientPart.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Client.css'\r\nimport PartRow from './PartRow'\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectOpenClient, } from './features/clientSlice'\r\nimport { openCreatePart, changeToAddP, fillListParts, selectListParts } from './features/partSlice'\r\nimport { db } from './firebase';\r\n\r\nfunction PartList() {\r\n    const dispatch = useDispatch()\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [parts, setParts] = useState([])\r\n    const [filterP, setFilterP] = useState('')\r\n    const parts2 = useSelector(selectListParts)\r\n\r\n    // useEffect(() => {\r\n    //     db.collection('parts')\r\n    //         .orderBy('partName', 'asc')\r\n    //         .onSnapshot(snapshot =>\r\n    //             setParts(\r\n    //                 snapshot.docs.map(doc => ({\r\n    //                     id: doc.id,\r\n    //                     data: doc.data(),\r\n    //                 }))\r\n    //             )\r\n    //         )\r\n    // }, [])\r\n    // dispatch(fillListParts(parts))\r\n\r\n\r\n    function filterChangeP(e) {\r\n        setFilterP(e.target.value)\r\n    }\r\n\r\n    function addPart() {\r\n        dispatch(openCreatePart())\r\n        dispatch(changeToAddP())\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientes2\">\r\n            <div className=\"clientes2Header\">\r\n                <div className=\"headerSearch2\"\r\n                    style={{ display: 'flex', color: 'red !important', justifyContent: \"center\" }}>\r\n                    <input\r\n                        placeholder='Buscar Cliente...'\r\n                        onChange={filterChangeP}\r\n                    >\r\n                    </input>\r\n                </div>\r\n                <div className=\"clientHeader2\">\r\n                    <p style={{ marginLeft: '20px' }}>Partes</p>\r\n                    <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                        {selectedClient?.Name}</p>\r\n\r\n                    <IconButton className=\"\">\r\n                        <div className=\"\" >\r\n                            <AddCircleIcon onClick={addPart} className=\"addClientIcon\" />\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"clientes2List\">\r\n                <div className=\"clientListRows2\">\r\n                    {parts2.filter(c => c.data.partName.includes(filterP)).map(({ id, data: { partName, desc, model, nom, coo, clientId, timestamp }\r\n                    }) => (\r\n                        <PartRow\r\n                            Id={id}\r\n                            key={id}\r\n                            Name={partName}\r\n                            desc={desc}\r\n                            model={model}\r\n                            nom={nom}\r\n                            coo={coo}\r\n                            clientId={clientId}\r\n                            time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PartList \r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientList.js",["241","242"],"import './ClientPart.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Client.css'\r\nimport ClientRow from './ClientRow'\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openCreateClient, selectOpenClient, changeToAdd, selectListClients, fillListClients } from './features/clientSlice'\r\nimport { db } from './firebase';\r\n\r\nfunction ClientList() {\r\n    const dispatch = useDispatch()\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    // const [clients, setClients] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n    const clients = useSelector(selectListClients)\r\n\r\n    useEffect(() => {\r\n        // db.collection('clients')\r\n        //     .orderBy('clientName', 'asc')\r\n        //     .onSnapshot(snapshot =>\r\n        //         setClients(\r\n        //             snapshot.docs.map(doc => ({\r\n        //                 id: doc.id,\r\n        //                 data: doc.data(),\r\n        //             }))\r\n        //         )\r\n        //     )\r\n    }, [])\r\n    // dispatch(fillListClients(clients))\r\n\r\n    function filterChange(e) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function addClient() {\r\n        dispatch(openCreateClient())\r\n        dispatch(changeToAdd())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"clientes2\">\r\n            <div className=\"clientes2Header\">\r\n                <div className=\"headerSearch2\"\r\n                    style={{ display: 'flex', color: 'red !important', justifyContent: \"center\" }}>\r\n                    <input\r\n                        placeholder='Buscar Cliente...'\r\n                        onChange={filterChange}\r\n                    >\r\n                    </input>\r\n                </div>\r\n                <div className=\"clientHeader\">\r\n                    <p style={{ marginLeft: '20px' }}>Clientes</p>\r\n                    <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                        {selectedClient?.Name}</p>\r\n\r\n                    <IconButton className=\"\">\r\n                        <div className=\"\" >\r\n                            <AddCircleIcon\r\n                                onClick={addClient}\r\n                                className=\"addClientIcon\" />\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"clientListRows2\">\r\n                {clients.filter(c => c.data.clientName.includes(filter)).map(({ id, data: { clientName, dir1, dir2, dir3, rfc, timestamp }\r\n                }) => (\r\n                    <ClientRow\r\n                        Id={id}\r\n                        key={id}\r\n                        Name={clientName}\r\n                        dir1={dir1}\r\n                        dir2={dir2}\r\n                        dir3={dir3}\r\n                        rfc={rfc}\r\n                        time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientList\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsZone.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsList.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\whsSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsRow.js",["243","244","245"],"import React from 'react'\r\nimport './ClientRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\n// import { selectWhs } from './features/clientSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { openCreateWhs, changeToEditW, selectOpenWhs, selectWhs } from './features/whsSlice'\r\n\r\n\r\n\r\nfunction WhsRow({ Id, Name, dir1, dir2, dir3, active }) {\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openWhs = () => {\r\n        dispatch(\r\n            selectWhs({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                active,\r\n            })\r\n        );\r\n    }\r\n\r\n    function deleteWhs() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar esta Bodega?\")) {\r\n            db.collection(\"warehouses\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectWhs({\r\n                    Id: null,\r\n                    Name: null,\r\n                    dir1: null,\r\n                    dir2: null,\r\n                    dir3: null,\r\n                    active: null,\r\n                })\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    function editWhs(client) {\r\n        dispatch(\r\n            selectWhs({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                active,\r\n            })\r\n        );\r\n        dispatch(changeToEditW())\r\n        dispatch(openCreateWhs())\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientRow\">\r\n            <div className=\"clientRowIcons\">\r\n                <IconButton>\r\n                    <EditIcon\r\n                        className=\"clientDetailsEditIcon\"\r\n                        onClick={() => editWhs(selectedWhs?.Id)}\r\n                    />\r\n                </IconButton>\r\n                <IconButton className=\"clientRowIconsColor\">\r\n                    <div className=\"deleteIcon\" onClick={deleteWhs}>\r\n                        <DeleteIcon className=\"clientRowDeleteIcon\" />\r\n                    </div>\r\n                </IconButton>\r\n\r\n            </div>\r\n            {/* <div className=\"clientRowId\">{Id}</div> */}\r\n            <div className=\"clientRowName\"\r\n                onClick={openWhs}\r\n                style={{ cursor: 'pointer' }}\r\n            >{Name}</div>\r\n            {/* <div className=\"clientRowDescription\">{Description}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhsRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\zoneSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneList.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneRow.js",["246","247"],"import React from 'react'\r\nimport './PartRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectZone, changeToEditZ, openCreateZone, selectOpenZone } from './features/zoneSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport { selectOpenWhs, } from './features/whsSlice'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nfunction ZoneRow({ Id, Name, desc, whsId }) {\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const selectedZone = useSelector(selectOpenZone)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openZone = () => {\r\n        dispatch(\r\n            selectZone({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                whsId,\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    function deleteZone() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Locación: \" + Name + \"?\")) {\r\n            db.collection(\"zones\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectZone({\r\n                    Id: null,\r\n                    Name,\r\n                    desc,\r\n                    whsId,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function editZone(whs) {\r\n        dispatch(\r\n            selectZone({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                whsId,\r\n            })\r\n        );\r\n        dispatch(changeToEditZ())\r\n        dispatch(openCreateZone())\r\n\r\n    }\r\n\r\n    if (selectedWhs?.Id === whsId) {\r\n        return (\r\n            <div className=\"partRow\">\r\n                <div className=\"partRowIcons\">\r\n                    <IconButton>\r\n                        <EditIcon\r\n                            className=\"clientDetailsEditIcon\"\r\n                            onClick={() => editZone(selectedZone?.Id)}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton className=\"partRowIconsColor\">\r\n                        <div className=\"deleteIcon\" onClick={deleteZone}>\r\n                            <DeleteIcon className=\"partRowDeleteIcon\"\r\n                            />\r\n\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <div className=\"partRowName\"><strong>{Name}</strong> {\" - \" + desc.substring(0, 30) + \"...\"}</div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (null)\r\n    }\r\n}\r\n\r\nexport default ZoneRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditWhs.js",["248"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditClient.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateWhs, selectEditMode, selectOpenWhs } from './features/whsSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditWhs() {\r\n    const editMode = useSelector(selectEditMode)\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const [whsName, setWhsName] = useState(editMode ? selectedWhs?.Name : '');\r\n    const [dir1, setDir1] = useState(editMode ? selectedWhs?.dir1 : '');\r\n    const [dir2, setDir2] = useState(editMode ? selectedWhs?.dir2 : '');\r\n    const [dir3, setDir3] = useState(editMode ? selectedWhs?.dir3 : '');\r\n    const [active, setActive] = useState(editMode ? selectedWhs?.active : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedWhs.Id;\r\n            db.collection('warehouses').doc(doc).set({\r\n                whsName: formData.whsName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                active: true,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('warehouses').add({\r\n                whsName: formData.whsName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                active: true,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateWhs())\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function whsClose() {\r\n        dispatch(closeCreateWhs())\r\n    }\r\n\r\n    return (<div className=\"createClient\">\r\n        <div className=\"createClient__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Bodega</h3>\r\n            <CloseIcon\r\n                className=\"createClient__close\"\r\n                onClick={whsClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Bodega:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='whsName'\r\n                type=\"text\"\r\n                value={whsName}\r\n                onChange={(e) => setWhsName(e.target.value)}\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.whsName && <p className=\"createWhs__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 1:</p>\r\n            </div>\r\n            <input\r\n                name='dir1'\r\n                value={dir1}\r\n                onChange={(e) => setDir1(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.dir1 && <p className=\"createWhs__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 2:</p>\r\n            </div>\r\n            <input\r\n                name='dir2'\r\n                onChange={(e) => setDir2(e.target.value)}\r\n                value={dir2}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 3:</p>\r\n            </div>\r\n            <input\r\n                name='dir3'\r\n                value={dir3}\r\n                onChange={(e) => setDir3(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Active:</p>\r\n            </div>\r\n            <input\r\n                name='active'\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n                type=\"text\"\r\n            // ref={register({ required: true })}\r\n            />\r\n            {errors.active && <p className=\"createWhs__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"createClient__options\">\r\n                <Button\r\n                    className=\"createClient__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditWhs;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditZone.js",["249"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditZone.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateZone, selectEditModeZ, selectOpenZone } from './features/zoneSlice'\r\nimport { selectOpenWhs } from './features/whsSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditZone() {\r\n    const editMode = useSelector(selectEditModeZ)\r\n    const selectedZone = useSelector(selectOpenZone)\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const [zoneName, setZoneName] = useState(editMode ? selectedZone?.Name : '');\r\n    const [desc, setDesc] = useState(editMode ? selectedZone?.desc : '');\r\n    // const [model, setModel] = useState(editMode ? selectedZone?.model : '');\r\n    // const [nom, setNOM] = useState(editMode ? selectedZone?.nom : '');\r\n    // const [coo, setCOO] = useState(editMode ? selectedZone?.coo : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedZone.Id;\r\n            db.collection('zones').doc(doc).set({\r\n                zoneName: formData.zoneName,\r\n                desc: formData.desc,\r\n                // model: formData.model,\r\n                // nom: formData.nom,\r\n                // coo: formData.coo,\r\n                whsId: selectedWhs.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('zones').add({\r\n                zoneName: formData.zoneName,\r\n                desc: formData.desc,\r\n                // model: formData.model,\r\n                // nom: formData.nom,\r\n                // coo: formData.coo,\r\n                whsId: selectedWhs.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateZone())\r\n        // const selectedZone = useSelector(selectOpenZone)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function zoneClose() {\r\n        dispatch(closeCreateZone())\r\n    }\r\n\r\n    console.log(\"editModeAddZone:\", editMode)\r\n\r\n\r\n    return (<div className=\"createZone\">\r\n        <div className=\"createZone__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Zona</h3>\r\n            <CloseIcon\r\n                className=\"createZone__close\"\r\n                onClick={zoneClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Zona:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='zoneName'\r\n                type=\"text\"\r\n                value={zoneName}\r\n                onChange={(e) => setZoneName(e.target.value)}\r\n                ref={register({ required: true })}\r\n                tabindex=\"0\"\r\n            />\r\n            {errors.zoneName && <p className=\"createZone__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Descripción</p>\r\n            </div>\r\n            <input\r\n                name='desc'\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.desc && <p className=\"createZone__error\">Campo Requerido...</p>}\r\n\r\n            {/* <div className=\"fieldHeader\">\r\n                <p>Modelo:</p>\r\n            </div>\r\n            <input\r\n                name='model'\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>NOM:</p>\r\n            </div>\r\n            <input\r\n                name='nom'\r\n                value={nom}\r\n                onChange={(e) => setNOM(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.nom && <p className=\"createZone__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>País de Origen:</p>\r\n            </div>\r\n            <input\r\n                name='coo'\r\n                value={coo}\r\n                onChange={(e) => setCOO(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.coo && <p className=\"createZone__error\">Campo Requerido...</p>} */}\r\n\r\n\r\n            <div className=\"createZone__options\">\r\n                <Button\r\n                    className=\"createZone__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditZone;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Receipts.js",["250","251","252","253","254","255","256","257"],"import React, { useEffect, useState } from 'react'\r\nimport './Receipts.css'\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport firebase from 'firebase'\r\nimport { db } from './firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveReceipt, getSavedReceipt, saveOrderId } from './features/receiptSlice'\r\nimport { selectUser } from './features/userSlice'\r\nimport { useBarcode } from 'react-barcodes';\r\nimport { jsPDF } from 'jspdf'\r\nimport 'svg2pdf.js'\r\nimport { selectListClients } from './features/clientSlice'\r\nimport { selectListParts } from './features/partSlice'\r\nimport { selectListWhss } from './features/whsSlice'\r\nimport { selectListZones } from './features/zoneSlice'\r\nimport { selectListCarriers } from './features/carrierSlice'\r\nimport { selectListSuppliers } from './features/supplierSlice'\r\nimport { selectListUoms } from './features/uomSlice'\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction Receipts() {\r\n    const history = useHistory()\r\n    // const [clients, setClients] = useState([])\r\n    const clients = useSelector(selectListClients)\r\n    // const [warehouses, setWarehouses] = useState([])\r\n    const warehouses = useSelector(selectListWhss)\r\n    // const [zones, setZones] = useState([])\r\n    const zones = useSelector(selectListZones)\r\n    const [filterZ, setFilterZ] = useState([])\r\n    // const [suppliers, setSuppliers] = useState([])\r\n    const suppliers = useSelector(selectListSuppliers)\r\n    // const [carriers, setCarriers] = useState([])\r\n    const carriers = useSelector(selectListCarriers)\r\n    // const [parts, setParts] = useState([])\r\n    const parts = useSelector(selectListParts)\r\n    // const [uoms, setUOMs] = useState([])\r\n    const uoms = useSelector(selectListUoms)\r\n    const [filterP, setFilterP] = useState([])\r\n    const [orderNumber, setOrderNumber] = useState([])\r\n    const dispatch = useDispatch()\r\n    const savedReceipt = useSelector(getSavedReceipt)\r\n    const [receipt, setReceipt] = useState()\r\n    const user = useSelector(selectUser);\r\n\r\n\r\n    function crearPDF() {\r\n        const doc = new jsPDF()\r\n        const x = 0, y = 0, width = 200, height = 100\r\n        const element = document.getElementById('svg')\r\n        doc\r\n            .svg(element, {\r\n                x,\r\n                y,\r\n                width,\r\n                height\r\n            })\r\n            .then(() => {\r\n                doc.save('myPDF.pdf')\r\n            })\r\n    }\r\n    const { inputRef } = useBarcode({\r\n        value: receipt?.id,\r\n        options: {\r\n        }\r\n    });\r\n\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n\r\n    async function getDoc() {\r\n        let query = await db.collection('warehouses').orderBy('whsName').limit(1).get();\r\n        let snapshot = query.docs[0];\r\n        let data = snapshot.id;\r\n        setFilterZ(data)\r\n        query = await db.collection('clients').orderBy('clientName').limit(1).get();\r\n        snapshot = query.docs[0];\r\n        data = snapshot.id;\r\n        setFilterP(data)\r\n    }\r\n\r\n    async function getOrderId() {\r\n        let query = await db.collection('orders').orderBy('orderId', 'desc').limit(1).get();\r\n        let snapshot = 1\r\n        if (query.docs[0]) {\r\n            snapshot = query.docs[0]?.data()\r\n            return snapshot?.orderId + 1;\r\n        }\r\n        else {\r\n            return 1\r\n        }\r\n\r\n        //let data = snapshot;\r\n        // console.log(\"New order id:\", data.orderId + 1)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // db.collection(\"suppliers\")\r\n        //     .orderBy('name', 'asc')\r\n        //     .get()\r\n        //     .then(snapshot =>\r\n        //         setSuppliers(\r\n        //             snapshot.docs.map(doc => ({\r\n        //                 id: doc.id,\r\n        //                 data: doc.data(),\r\n        //             }))\r\n        //         ))\r\n        //     .catch((error) => {\r\n        //         console.log(\"Error getting documents: \", error);\r\n        //     });\r\n        // db.collection(\"carriers\")\r\n        //     .orderBy('name', 'asc')\r\n        //     .get()\r\n        //     .then(snapshot =>\r\n        //         setCarriers(\r\n        //             snapshot.docs.map(doc => ({\r\n        //                 id: doc.id,\r\n        //                 data: doc.data(),\r\n        //             }))\r\n        //         ))\r\n        //     .catch((error) => {\r\n        //         console.log(\"Error getting documents: \", error);\r\n        //     });\r\n        // db.collection(\"uoms\")\r\n        //     .orderBy('name', 'asc')\r\n        //     .get()\r\n        //     .then(snapshot =>\r\n        //         setUOMs(\r\n        //             snapshot.docs.map(doc => ({\r\n        //                 id: doc.id,\r\n        //                 data: doc.data(),\r\n        //             }))\r\n        //         ))\r\n        //     .catch((error) => {\r\n        //         console.log(\"Error getting documents: \", error);\r\n        //     });\r\n    }, [])\r\n\r\n    function bodegaChange(e) {\r\n        setFilterZ(e.target.value)\r\n        selectChange(e)\r\n        alert(zones.filter(c => c.data.whsId.includes(e.target.value)).length)\r\n\r\n    }\r\n    function clientChange(e) {\r\n        setFilterP(e.target.value)\r\n        selectChange(e)\r\n    }\r\n    function selectChange(e) {\r\n        document.getElementById(e.target.id).classList.add('borderGreen')\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let docRef = db.collection(\"clients\").doc(formData.cliente)\r\n        let clientName = ''\r\n        let whsName = ''\r\n        docRef.get().then((doc) => {\r\n            clientName = doc.data().clientName\r\n        })\r\n        docRef = db.collection(\"warehouses\").doc(formData.bodega)\r\n        const d = new Date()\r\n        const newOrderId = getOrderId().then((orden) => {\r\n            docRef.get().then((doc) => {\r\n                whsName = doc.data().whsName\r\n                db.collection('orders').add({\r\n                    orderId: orden,\r\n                    warehouse: whsName,\r\n                    recZone: formData.zona,\r\n                    client: clientName,\r\n                    carrier: formData.carrier,\r\n                    supplier: formData.proveedor,\r\n                    poNumber: formData.po,\r\n                    clientReference: formData.cr,\r\n                    bill: formData.bill,\r\n                    part: formData.parte,\r\n                    qty: formData.cantidad,\r\n                    uomq: formData.uomq,\r\n                    weight: formData.peso,\r\n                    uomw: formData.uomp,\r\n                    recNotes: formData.notas,\r\n                    orderStatus: \"Received\",\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    recTimestamp: d.getMonth() + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" \" + d.getHours() + \":\" + d.getMinutes(),\r\n                    recUser: user?.email,\r\n                    orderActive: true,\r\n                    recActive: true,\r\n                })\r\n                    .then((docRef) => {\r\n                        handleOpen()\r\n                        setOrderNumber(docRef.id)\r\n                        dispatch(saveReceipt({\r\n                            id: docRef.id,\r\n                            orderId: orden,\r\n                            warehouse: whsName,\r\n                            recZone: formData.zona,\r\n                            client: clientName,\r\n                            carrier: formData.carrier,\r\n                            supplier: formData.proveedor,\r\n                            poNumber: formData.po,\r\n                            clientReference: formData.cr,\r\n                            bill: formData.bill,\r\n                            part: formData.parte,\r\n                            qty: formData.cantidad,\r\n                            uomq: formData.uomq,\r\n                            weight: formData.peso,\r\n                            uomw: formData.uomp,\r\n                            recNotes: formData.notas,\r\n                            orderStatus: \"Received\",\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            recTimestamp: d.getMonth() + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" \" + d.getHours() + \":\" + d.getMinutes(),\r\n                            recUser: user?.email,\r\n                            orderActive: true,\r\n                            recActive: true,\r\n                        }))\r\n                        //dispatch(saveReceipt())\r\n                        // console.log(\"Document written with ID: \", docRef.id);\r\n                        // console.log(\"mando llamar pdf del save\")\r\n                        // crearPDF();\r\n                        // console.log(\"linea posterior a crearPDF en save\")\r\n                        window.setTimeout(() => { history.push(\"/etiqueta\") }, 2000)\r\n                        // history.push(\"/\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error creating Receipt: \", error);\r\n                    });\r\n            })\r\n        })\r\n        console.log(\"New Order ID: \", newOrderId)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"receipts\">\r\n            <div className=\"header\">\r\n                <h1>Recibos</h1>\r\n                <div className=\"\" style={{ visibility: \"visible\" }}> <svg id=\"svg\" ref={inputRef} /> </div>\r\n            </div>\r\n            <form className=\"container\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"containerHeader\">\r\n                    <div className=\"col1\" >\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Bodega</p>\r\n                                <div className=\"checkError\">\r\n                                    <select id=\"selectBodega\" onChange={bodegaChange}\r\n                                        ref={register({ required: true })}\r\n                                        name=\"bodega\"\r\n                                    >\r\n                                        <option value=\"\" disabled selected > Elegir Bodega</option>\r\n                                        {warehouses.map(({ id, data: { whsName, }\r\n                                        }) => (\r\n                                            <option value={id}>{whsName.substr(0, 25)}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {/* {errors.bodega && <p className=\"createClient__error\">Campo Requerido...</p>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"der\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Zona</p>\r\n                                <select id=\"selectZona\" onChange={selectChange}\r\n                                    ref={register({ required: true })}\r\n                                    name=\"zona\"\r\n                                >\r\n                                    <option value=\"\" disabled selected > Elegir Locación</option>\r\n                                    {zones.filter(c => c.data.whsId.includes(filterZ)).map(({ id, data: { zoneName, }\r\n                                    }) => (\r\n                                        <option value={zoneName}>{zoneName.substr(0, 25)}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col2\">\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Cliente</p>\r\n                                <select id=\"selectCliente\" onChange={clientChange}\r\n                                    name=\"cliente\"\r\n                                    ref={register({ required: true })}\r\n                                >\r\n                                    <option value=\"\" disabled selected > Elegir Cliente</option>\r\n                                    {clients.map(({ id, data: { clientName, }\r\n                                    }) => (\r\n                                        <option value={id}>{clientName.substr(0, 25) + \"...\"}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"der\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Client Ref.</p>\r\n                                <input type=\"text\" placeholder=\"No de Referencia\" className=\"opcional\"\r\n                                    name=\"cr\"\r\n                                    ref={register({ required: false })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col2\">\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Proveedor</p>\r\n                                <select id=\"selectProveedor\" onChange={selectChange}\r\n                                    ref={register({ required: true })}\r\n                                    name=\"proveedor\"\r\n                                >\r\n                                    <option value=\"\" disabled selected > Elegir Proveedor</option>\r\n                                    {suppliers.map(({ id, data: { name, }\r\n                                    }) => (\r\n                                        <option value={name}>{name?.substr(0, 25)}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>PO Number</p>\r\n                                <input type=\"text\" placeholder=\"No de PO\" className=\"opcional\"\r\n                                    name=\"po\"\r\n                                    ref={register({ required: false })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col3\">\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Carrier Level</p>\r\n                                <select id=\"selectCarrier\" onChange={selectChange}\r\n                                    name=\"carrier\"\r\n                                    ref={register({ required: true })}\r\n                                >\r\n                                    <option value=\"\" disabled selected > Elegir Carrier</option>\r\n                                    {carriers.map(({ id, data: { name, }\r\n                                    }) => (\r\n                                        <option value={name}>{name?.substr(0, 25)}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"der\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Bill of Lading</p>\r\n                                <input type=\"text\" placeholder=\"123abc\" className=\"opcional\"\r\n                                    name=\"bill\"\r\n                                    ref={register({ required: false })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"details\">\r\n                    <div className=\"detCol1\">\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\"><p>Parte</p></div>\r\n                            <select id=\"selectParte\" onChange={selectChange}\r\n                                name=\"parte\"\r\n                                ref={register({ required: true })}\r\n                            >\r\n                                <option value=\"\" disabled selected > Elegir Parte</option>\r\n                                {parts.filter(c => c.data.clientId.includes(filterP)).map(({ id, data: { partName, }\r\n                                }) => (\r\n                                    <option value={partName}>{partName?.substr(0, 25)}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Cantidad</p>\r\n                                <input id=\"cantidad\" placeholder=\"123\" type=\"number\" style={{ width: \"3rem\" }}\r\n                                    name=\"cantidad\"\r\n                                    onChange={selectChange}\r\n                                    ref={register({ required: true })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"der\">\r\n                                <select id=\"selectUOMqty\" onChange={selectChange} style={{ width: \"4rem\" }}\r\n                                    name=\"uomq\"\r\n                                    ref={register({ required: true })}\r\n                                >\r\n                                    <option value=\"\" disabled selected >UOM</option>\r\n                                    {uoms.filter(c => c.data.type.includes('qty')).map(({ id, data: { name, }\r\n                                    }) => (\r\n                                        <option value={name}>{name?.substr(0, 25)}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\"><p>Condición</p></div>\r\n                            <select id=\"selectCondicion\" onChange={selectChange}\r\n                                name=\"condicion\"\r\n                                ref={register({ required: true })}\r\n                            >\r\n                                <option value=\"\" selected disabled>Elegir Condición</option>\r\n                                <option value=\"Good\">Good</option>\r\n                                <option value=\"Bad\">Bad</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"combo\">\r\n                            <div className=\"izq\">\r\n                                <p>Peso</p>\r\n                                <input id=\"qtyPeso\" onChange={selectChange} placeholder=\"1.23\" type=\"number\" step=\".01\" style={{ width: \"3rem\" }}\r\n                                    name=\"peso\"\r\n                                    ref={register({ required: true })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"der\">\r\n                                <select id=\"selectUOMweight\" onChange={selectChange} style={{ width: \"4rem\" }}\r\n                                    name=\"uomp\"\r\n                                    ref={register({ required: true })}\r\n                                >\r\n                                    <option value=\"\" disabled selected >UOM</option>\r\n                                    {uoms.filter(c => c.data.type.includes('weight')).map(({ id, data: { name, }\r\n                                    }) => (\r\n                                        <option value={name}>{name?.substr(0, 25)}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detCol2\">\r\n                        <h3>Notas</h3>\r\n                        <textarea placeholder=\"Notas opcionales\" name=\"notas\" id=\"\" cols=\"30\" rows=\"10\"\r\n                            ref={register({ required: false })}\r\n                        ></textarea>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createClient__options\" style={{ justifyContent: \"flex-end\", marginRight: \"50px\" }}>\r\n                    <Button\r\n                        className=\"createReceipt\"\r\n                        // variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Guardar\r\n                </Button>\r\n                </div>\r\n            </form>\r\n\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    ¡¡¡Recibo procesado con éxito con No: {orderNumber}!!!\r\n        </Alert>\r\n            </Snackbar>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Receipts\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Snackbar.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Etiqueta.js",["258","259","260","261","262","263","264","265"],"import React, { useEffect, useState } from 'react'\r\nimport { useBarcode } from 'react-barcodes';\r\nimport { jsPDF } from 'jspdf'\r\nimport 'svg2pdf.js'\r\nimport { useSelector, } from 'react-redux'\r\nimport { getSavedReceipt, selectReciboFranco } from './features/receiptSlice'\r\n\r\n\r\n\r\nfunction Etiqueta() {\r\n    const selectedReceipt = useSelector(getSavedReceipt)\r\n    console.log(selectedReceipt)//\r\n    // crearPDF()\r\n    // function crearPDF() {\r\n    alert('crearEtiqueta empieza')\r\n    let fSize1 = 14, fSize2 = 12, fSize3 = 10, fSize4 = 8, fSizeDetails = 7\r\n    let rowSize = .25, y = .25, x = .25\r\n    var d = new Date();\r\n    var recibotime = d.getMonth() + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" \" + d.getHours() + \":\" + d.getMinutes();\r\n    const doc = new jsPDF({\r\n        // orientation: \"landscape\",\r\n        unit: \"in\",\r\n        format: [4, 6]\r\n    })\r\n    // first need to set text\r\n    doc.setFont('Helvetica', 'bold')\r\n    doc.setFontSize(fSize2)\r\n    doc.text(\"Sustaita Forwarding L.L.C.\", 2, y, { align: 'center' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize1)\r\n    doc.text(\"Recibo de Inventario\", 2, y, { align: 'center' })\r\n    // doc.text(selectedReceipt.orderId.toString(), 1, 1)\r\n    y += rowSize * 2\r\n    doc.setFontSize(fSize2)\r\n    doc.text(\"No. de Orden: SF-0000\" + selectedReceipt.orderId + \"-21\", x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Cliente: \" + selectedReceipt.client, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Proveer: \" + selectedReceipt.supplier, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Carrier: \" + selectedReceipt.carrier, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Referencia: \" + selectedReceipt.clientReference, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Tracking: \" + selectedReceipt.bill, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Tipo Embarque: \" + \"Paqueteria???\", x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"No Caja: \" + \"\", x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"No Parte: \" + selectedReceipt.part, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Sección: \" + selectedReceipt.zone, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Peso: \" + selectedReceipt.weight + \" \" + selectedReceipt.uomw, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Cantidad: \" + selectedReceipt.qty + \" \" + selectedReceipt.uomq, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Recibido: \" + selectedReceipt.recTimestamp, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Usuario: \" + selectedReceipt.recUser, x, y, { align: 'left' })\r\n    y += rowSize\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"Notas: *\" + selectedReceipt.recNotes.substr(0, 43) + \"*\", x, y, { align: 'left' })\r\n    y += .2\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"\" + selectedReceipt.recNotes.substr(43, 52) + \"*\", x, y, { align: 'left' })\r\n    y += .2\r\n    doc.setFontSize(fSize3)\r\n    doc.text(\"\" + selectedReceipt.recNotes.substr(95, 52) + \"*\", x, y, { align: 'left' })\r\n\r\n    //then I can insert the barcode and open document\r\n    console.log(\"timestamp: \", selectedReceipt.recTimestamp)\r\n    const width = 4, height = .8\r\n    y = 5\r\n    const element = document.getElementById('svg')\r\n\r\n    doc\r\n        .svg(element, {\r\n            x,\r\n            y,\r\n            width,\r\n            height\r\n        })\r\n        .then(() => {\r\n\r\n            window.open(doc.output('bloburl'), '_blank')\r\n        })\r\n    // }\r\n    const { inputRef } = useBarcode({\r\n        value: \"*SF04370/21*\",\r\n        format: \"CODE39\",\r\n        options: {\r\n            // background: '#ccffff',\r\n            //displayValue: false,\r\n\r\n        }\r\n    });\r\n    return (\r\n        <div>\r\n            <div className=\"\" style={{ visibility: \"hidden\" }}> <svg id=\"svg\" ref={inputRef} /> </div>\r\n            {/* <button onClick={crearPDF}>crear</button> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Etiqueta\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\receiptSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\userSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Login.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\components\\Dashboard.js",["266","267","268","269","270","271","272","273","274","275","276","277"],"import React from 'react'\r\nimport CreateOrders from '../orders/CreateOrders'\r\nimport './Dashboard.css'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <h1>DASHBOARD</h1>\r\n            <CreateOrders />\r\n            <div className=\"dashboardDetails\">\r\n                <div className=\"dashboardRow\">\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Clientes</h3>\r\n                        <div className=\"mainNumber\">3</div>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Partes</h3>\r\n                        <div className=\"mainNumber\">15</div>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Notificaciones</h3>\r\n                        <div className=\"boxRow\">\r\n                            <p>Nuevas</p>\r\n                            <div className=\"secondaryNumber\">1</div>\r\n                        </div>\r\n                        <div className=\"boxRow\">\r\n                            <p>Leídas</p>\r\n                            <div className=\"secondaryNumber\">2</div>\r\n                        </div>\r\n                        <div className=\"boxRow\">\r\n                            <p>Total</p>\r\n                            <div className=\"secondaryNumber\">3</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Ordenes</h3>\r\n                        <div className=\"boxRow\">\r\n                            <p>Abiertas</p>\r\n                            <div className=\"secondaryNumber\">3</div>\r\n                        </div>\r\n                        <div className=\"boxRow\">\r\n                            <p>Embarque Ready</p>\r\n                            <div className=\"secondaryNumber\">2</div>\r\n                        </div>\r\n                        <div className=\"boxRow\">\r\n                            <p>Total</p>\r\n                            <div className=\"secondaryNumber\">5</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dashboardRow\">\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Recibos</h3>\r\n                        <div className=\"boxRow\"><a href=\"#\">Hoy</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Semana</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Mes</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Año</a></div>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Embarques</h3>\r\n                        <div className=\"boxRow\"><a href=\"#\">Hoy</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Semana</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Mes</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Año</a></div>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Exportaciones</h3>\r\n                        <div className=\"boxRow\"><a href=\"#\">Hoy</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Semana</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Mes</a></div>\r\n                        <div className=\"boxRow\"><a href=\"#\">Año</a></div>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>In Transit</h3>\r\n                        <div className=\"mainNumber\">10</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dashboardRow\">\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Reporte 1</h3>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Reporte 2</h3>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Reporte 3</h3>\r\n                    </div>\r\n                    <div className=\"dashboardBox\">\r\n                        <h3>Reporte 4</h3>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\carrierSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\supplierSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\uomSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\CreateOrders.js",["278","279","280","281"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\ListOrders.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\Table.js",["282","283","284","285","286"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\orders\\LoadOrders.js",["287"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\admin\\AdminHome.js",[],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":13,"column":53,"nodeType":"294","messageId":"295","endLine":13,"endColumn":70},{"ruleId":"292","severity":1,"message":"296","line":20,"column":8,"nodeType":"294","messageId":"295","endLine":20,"endColumn":14},{"ruleId":"292","severity":1,"message":"297","line":33,"column":8,"nodeType":"294","messageId":"295","endLine":33,"endColumn":13},{"ruleId":"292","severity":1,"message":"298","line":43,"column":10,"nodeType":"294","messageId":"295","endLine":43,"endColumn":17},{"ruleId":"292","severity":1,"message":"299","line":43,"column":19,"nodeType":"294","messageId":"295","endLine":43,"endColumn":29},{"ruleId":"300","severity":1,"message":"301","line":75,"column":6,"nodeType":"302","endLine":75,"endColumn":8,"suggestions":"303"},{"ruleId":"292","severity":1,"message":"304","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"305","line":1,"column":28,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"306","line":12,"column":10,"nodeType":"294","messageId":"295","endLine":12,"endColumn":12},{"ruleId":"292","severity":1,"message":"307","line":13,"column":10,"nodeType":"294","messageId":"295","endLine":13,"endColumn":21},{"ruleId":"292","severity":1,"message":"308","line":13,"column":23,"nodeType":"294","messageId":"295","endLine":13,"endColumn":34},{"ruleId":"292","severity":1,"message":"309","line":14,"column":10,"nodeType":"294","messageId":"295","endLine":14,"endColumn":25},{"ruleId":"292","severity":1,"message":"310","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":14},{"ruleId":"288","replacedBy":"311"},{"ruleId":"290","replacedBy":"312"},{"ruleId":"292","severity":1,"message":"313","line":1,"column":28,"nodeType":"294","messageId":"295","endLine":1,"endColumn":38},{"ruleId":"292","severity":1,"message":"314","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":16},{"ruleId":"292","severity":1,"message":"315","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":25},{"ruleId":"292","severity":1,"message":"316","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":16},{"ruleId":"292","severity":1,"message":"293","line":9,"column":28,"nodeType":"294","messageId":"295","endLine":9,"endColumn":45},{"ruleId":"292","severity":1,"message":"317","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":24},{"ruleId":"292","severity":1,"message":"318","line":11,"column":26,"nodeType":"294","messageId":"295","endLine":11,"endColumn":38},{"ruleId":"292","severity":1,"message":"319","line":11,"column":55,"nodeType":"294","messageId":"295","endLine":11,"endColumn":70},{"ruleId":"292","severity":1,"message":"320","line":23,"column":12,"nodeType":"294","messageId":"295","endLine":23,"endColumn":19},{"ruleId":"292","severity":1,"message":"321","line":24,"column":12,"nodeType":"294","messageId":"295","endLine":24,"endColumn":19},{"ruleId":"292","severity":1,"message":"322","line":25,"column":11,"nodeType":"294","messageId":"295","endLine":25,"endColumn":25},{"ruleId":"292","severity":1,"message":"323","line":117,"column":14,"nodeType":"294","messageId":"295","endLine":117,"endColumn":26},{"ruleId":"292","severity":1,"message":"324","line":122,"column":14,"nodeType":"294","messageId":"295","endLine":122,"endColumn":26},{"ruleId":"292","severity":1,"message":"325","line":22,"column":37,"nodeType":"294","messageId":"295","endLine":22,"endColumn":42},{"ruleId":"292","severity":1,"message":"326","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":18},{"ruleId":"292","severity":1,"message":"327","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":32},{"ruleId":"292","severity":1,"message":"328","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":16},{"ruleId":"292","severity":1,"message":"329","line":12,"column":26,"nodeType":"294","messageId":"295","endLine":12,"endColumn":40},{"ruleId":"292","severity":1,"message":"330","line":12,"column":42,"nodeType":"294","messageId":"295","endLine":12,"endColumn":55},{"ruleId":"292","severity":1,"message":"331","line":63,"column":14,"nodeType":"294","messageId":"295","endLine":63,"endColumn":24},{"ruleId":"292","severity":1,"message":"332","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":19},{"ruleId":"292","severity":1,"message":"333","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":19},{"ruleId":"292","severity":1,"message":"334","line":20,"column":11,"nodeType":"294","messageId":"295","endLine":20,"endColumn":18},{"ruleId":"292","severity":1,"message":"325","line":22,"column":37,"nodeType":"294","messageId":"295","endLine":22,"endColumn":42},{"ruleId":"292","severity":1,"message":"333","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":19},{"ruleId":"292","severity":1,"message":"334","line":17,"column":11,"nodeType":"294","messageId":"295","endLine":17,"endColumn":18},{"ruleId":"292","severity":1,"message":"335","line":20,"column":11,"nodeType":"294","messageId":"295","endLine":20,"endColumn":19},{"ruleId":"292","severity":1,"message":"325","line":24,"column":37,"nodeType":"294","messageId":"295","endLine":24,"endColumn":42},{"ruleId":"292","severity":1,"message":"304","line":2,"column":17,"nodeType":"294","messageId":"295","endLine":2,"endColumn":26},{"ruleId":"292","severity":1,"message":"336","line":9,"column":40,"nodeType":"294","messageId":"295","endLine":9,"endColumn":53},{"ruleId":"292","severity":1,"message":"306","line":10,"column":10,"nodeType":"294","messageId":"295","endLine":10,"endColumn":12},{"ruleId":"292","severity":1,"message":"337","line":15,"column":12,"nodeType":"294","messageId":"295","endLine":15,"endColumn":17},{"ruleId":"292","severity":1,"message":"338","line":15,"column":19,"nodeType":"294","messageId":"295","endLine":15,"endColumn":27},{"ruleId":"292","severity":1,"message":"309","line":8,"column":78,"nodeType":"294","messageId":"295","endLine":8,"endColumn":93},{"ruleId":"292","severity":1,"message":"306","line":9,"column":10,"nodeType":"294","messageId":"295","endLine":9,"endColumn":12},{"ruleId":"292","severity":1,"message":"332","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":19},{"ruleId":"292","severity":1,"message":"333","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":19},{"ruleId":"292","severity":1,"message":"334","line":20,"column":11,"nodeType":"294","messageId":"295","endLine":20,"endColumn":18},{"ruleId":"292","severity":1,"message":"334","line":18,"column":11,"nodeType":"294","messageId":"295","endLine":18,"endColumn":18},{"ruleId":"292","severity":1,"message":"339","line":21,"column":11,"nodeType":"294","messageId":"295","endLine":21,"endColumn":19},{"ruleId":"292","severity":1,"message":"325","line":22,"column":37,"nodeType":"294","messageId":"295","endLine":22,"endColumn":42},{"ruleId":"292","severity":1,"message":"325","line":24,"column":37,"nodeType":"294","messageId":"295","endLine":24,"endColumn":42},{"ruleId":"292","severity":1,"message":"340","line":12,"column":40,"nodeType":"294","messageId":"295","endLine":12,"endColumn":51},{"ruleId":"292","severity":1,"message":"341","line":58,"column":11,"nodeType":"294","messageId":"295","endLine":58,"endColumn":23},{"ruleId":"292","severity":1,"message":"342","line":59,"column":21,"nodeType":"294","messageId":"295","endLine":59,"endColumn":31},{"ruleId":"292","severity":1,"message":"343","line":63,"column":14,"nodeType":"294","messageId":"295","endLine":63,"endColumn":22},{"ruleId":"292","severity":1,"message":"344","line":85,"column":11,"nodeType":"294","messageId":"295","endLine":85,"endColumn":18},{"ruleId":"292","severity":1,"message":"325","line":100,"column":37,"nodeType":"294","messageId":"295","endLine":100,"endColumn":42},{"ruleId":"292","severity":1,"message":"345","line":100,"column":44,"nodeType":"294","messageId":"295","endLine":100,"endColumn":50},{"ruleId":"292","severity":1,"message":"346","line":103,"column":20,"nodeType":"294","messageId":"295","endLine":103,"endColumn":26},{"ruleId":"292","severity":1,"message":"304","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"305","line":1,"column":28,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"347","line":6,"column":27,"nodeType":"294","messageId":"295","endLine":6,"endColumn":45},{"ruleId":"292","severity":1,"message":"348","line":16,"column":48,"nodeType":"294","messageId":"295","endLine":16,"endColumn":54},{"ruleId":"292","severity":1,"message":"349","line":16,"column":60,"nodeType":"294","messageId":"295","endLine":16,"endColumn":72},{"ruleId":"292","severity":1,"message":"350","line":19,"column":9,"nodeType":"294","messageId":"295","endLine":19,"endColumn":19},{"ruleId":"351","severity":1,"message":"352","line":53,"column":32,"nodeType":"353","messageId":"354","endLine":53,"endColumn":33},{"ruleId":"351","severity":1,"message":"352","line":56,"column":26,"nodeType":"353","messageId":"354","endLine":56,"endColumn":27},{"ruleId":"355","severity":1,"message":"356","line":54,"column":49,"nodeType":"357","endLine":54,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":55,"column":49,"nodeType":"357","endLine":55,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":56,"column":49,"nodeType":"357","endLine":56,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":57,"column":49,"nodeType":"357","endLine":57,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":61,"column":49,"nodeType":"357","endLine":61,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":62,"column":49,"nodeType":"357","endLine":62,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":63,"column":49,"nodeType":"357","endLine":63,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":64,"column":49,"nodeType":"357","endLine":64,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":68,"column":49,"nodeType":"357","endLine":68,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":69,"column":49,"nodeType":"357","endLine":69,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":70,"column":49,"nodeType":"357","endLine":70,"endColumn":61},{"ruleId":"355","severity":1,"message":"356","line":71,"column":49,"nodeType":"357","endLine":71,"endColumn":61},{"ruleId":"292","severity":1,"message":"358","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":26},{"ruleId":"292","severity":1,"message":"359","line":4,"column":29,"nodeType":"294","messageId":"295","endLine":4,"endColumn":42},{"ruleId":"292","severity":1,"message":"360","line":6,"column":10,"nodeType":"294","messageId":"295","endLine":6,"endColumn":20},{"ruleId":"292","severity":1,"message":"361","line":6,"column":22,"nodeType":"294","messageId":"295","endLine":6,"endColumn":33},{"ruleId":"292","severity":1,"message":"362","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":16},{"ruleId":"292","severity":1,"message":"363","line":4,"column":18,"nodeType":"294","messageId":"295","endLine":4,"endColumn":31},{"ruleId":"292","severity":1,"message":"364","line":4,"column":33,"nodeType":"294","messageId":"295","endLine":4,"endColumn":44},{"ruleId":"292","severity":1,"message":"365","line":4,"column":46,"nodeType":"294","messageId":"295","endLine":4,"endColumn":58},{"ruleId":"292","severity":1,"message":"366","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":12},{"ruleId":"292","severity":1,"message":"367","line":24,"column":12,"nodeType":"294","messageId":"295","endLine":24,"endColumn":23},"no-native-reassign",["368"],"no-negated-in-lhs",["369"],"no-unused-vars","'selectListClients' is defined but never used.","Identifier","unusedVar","'Client' is defined but never used.","'Table' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["370"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'db' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'fillListClients' is defined but never used.","'Header' is defined but never used.",["368"],["369"],"'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'AppsIcon' is defined but never used.","'openCreatePart' is defined but never used.","'changeToAddP' is defined but never used.","'selectListParts' is defined but never used.","'filterZ' is assigned a value but never used.","'filterP' is assigned a value but never used.","'selectedClient' is assigned a value but never used.","'bodegaChange' is defined but never used.","'clientChange' is defined but never used.","'watch' is assigned a value but never used.","'PersonIcon' is defined but never used.","'SettingsApplicationsIcon' is defined but never used.","'EditIcon' is defined but never used.","'selectOpenPart' is defined but never used.","'changeToEditP' is defined but never used.","'editClient' is defined but never used.","'DetailsIcon' is defined but never used.","'ListAltIcon' is defined but never used.","'history' is assigned a value but never used.","'openPart' is assigned a value but never used.","'fillListParts' is defined but never used.","'parts' is assigned a value but never used.","'setParts' is assigned a value but never used.","'openZone' is assigned a value but never used.","'saveOrderId' is defined but never used.","'savedReceipt' is assigned a value but never used.","'setReceipt' is assigned a value but never used.","'crearPDF' is defined but never used.","'classes' is assigned a value but never used.","'errors' is assigned a value but never used.","'getDoc' is defined but never used.","'selectReciboFranco' is defined but never used.","'fSize4' is assigned a value but never used.","'fSizeDetails' is assigned a value but never used.","'recibotime' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'selectClientMain' is defined but never used.","'selectWhsMain' is defined but never used.","'FilePicker' is defined but never used.","'ImagePicker' is defined but never used.","'AddBox' is defined but never used.","'ArrowDownward' is defined but never used.","'ChevronLeft' is defined but never used.","'ChevronRight' is defined but never used.","'Icon' is defined but never used.","'orderNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},"Update the dependencies array to be: [dispatch]",{"range":"373","text":"374"},[2569,2571],"[dispatch]"]