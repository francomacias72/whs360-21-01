[{"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\index.js":"1","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\App.js":"2","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\app\\store.js":"3","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Header.js":"4","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Sidebar.js":"5","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\firebase.js":"6","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Body.js":"7","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Client.js":"8","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\CreateClient.js":"9","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\clientSlice.js":"10","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\SidebarOption.js":"11","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ClientRow.js":"12","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditClient.js":"13","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditPart.js":"14","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\partSlice.js":"15","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\PartRow.js":"16","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\WhsZone.js":"17","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ClientPart.js":"18","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\whsSlice.js":"19","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\zoneSlice.js":"20","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\WhsList.js":"21","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ClientList.js":"22","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\PartList.js":"23","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ZoneList.js":"24","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\WhsRow.js":"25","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ZoneRow.js":"26","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditWhs.js":"27","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditZone.js":"28","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Receipts.js":"29"},{"size":360,"mtime":1611852381113,"results":"30","hashOfConfig":"31"},{"size":2136,"mtime":1612794949612,"results":"32","hashOfConfig":"31"},{"size":432,"mtime":1612550759372,"results":"33","hashOfConfig":"31"},{"size":1145,"mtime":1612550759345,"results":"34","hashOfConfig":"31"},{"size":2099,"mtime":1612794950564,"results":"35","hashOfConfig":"31"},{"size":741,"mtime":1612550759414,"results":"36","hashOfConfig":"31"},{"size":304,"mtime":1611852381073,"results":"37","hashOfConfig":"31"},{"size":7036,"mtime":1612550759324,"results":"38","hashOfConfig":"31"},{"size":4842,"mtime":1611852802654,"results":"39","hashOfConfig":"31"},{"size":1143,"mtime":1611852381109,"results":"40","hashOfConfig":"31"},{"size":433,"mtime":1611852381105,"results":"41","hashOfConfig":"31"},{"size":3580,"mtime":1612550759341,"results":"42","hashOfConfig":"31"},{"size":4821,"mtime":1612550759309,"results":"43","hashOfConfig":"31"},{"size":5199,"mtime":1612550759319,"results":"44","hashOfConfig":"31"},{"size":1108,"mtime":1612550759406,"results":"45","hashOfConfig":"31"},{"size":3203,"mtime":1612797432743,"results":"46","hashOfConfig":"31"},{"size":308,"mtime":1612550759356,"results":"47","hashOfConfig":"31"},{"size":317,"mtime":1612550759327,"results":"48","hashOfConfig":"31"},{"size":1081,"mtime":1612550759408,"results":"49","hashOfConfig":"31"},{"size":1108,"mtime":1612550759411,"results":"50","hashOfConfig":"31"},{"size":2964,"mtime":1612794950576,"results":"51","hashOfConfig":"31"},{"size":3004,"mtime":1612794949694,"results":"52","hashOfConfig":"31"},{"size":3130,"mtime":1612794950038,"results":"53","hashOfConfig":"31"},{"size":3156,"mtime":1612794950588,"results":"54","hashOfConfig":"31"},{"size":3063,"mtime":1612550759354,"results":"55","hashOfConfig":"31"},{"size":2889,"mtime":1612794950733,"results":"56","hashOfConfig":"31"},{"size":4748,"mtime":1612794949275,"results":"57","hashOfConfig":"31"},{"size":5206,"mtime":1612794949560,"results":"58","hashOfConfig":"31"},{"size":15566,"mtime":1612794950470,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yytm2n",{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\index.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\App.js",["127","128","129","130"],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\app\\store.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Header.js",[],["131","132"],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Sidebar.js",["133"],"import React from 'react'\r\nimport './Sidebar.css'\r\nimport logo from './360logo.png'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarOption from './SidebarOption'\r\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n    const history = useHistory()\r\n\r\n    function alerta() {\r\n        history.push(\"/client\")\r\n    }\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div class=\"sidebar__top\">\r\n                <img src={logo} alt=\"\" />\r\n                <h1>WHS 360</h1>\r\n            </div>\r\n            <div className=\"sidebarOptions\">\r\n                <div onClick={() => history.push(\"/client\")}> <SidebarOption Icon={PersonIcon} title=\"Clientes/Partes\" number={5} color={\"#A53AB7\"} /> </div>\r\n                {/* <div onClick={() => history.push(\"/part\")}><SidebarOption Icon={ViewHeadlineIcon} title=\"Partes\" number={4} color={\"#4caf50\"} /></div> */}\r\n                <SidebarOption Icon={StoreIcon} title=\"Bodegas/Locaciones\" number={2} color={\"#fd7e14\"} />\r\n                <SidebarOption Icon={AccountTreeIcon} title=\"Inventarios\" number={2} color={\"#6c757d\"} />\r\n                <SidebarOption Icon={ReceiptIcon} title=\"Recibos\" number={25} color={\"#17a2b8\"} />\r\n                <SidebarOption Icon={LocalShippingIcon} title=\"Embarques\" number={2} color={\"#e83e8c\"} />\r\n                <SidebarOption Icon={ImportExportIcon} title=\"Exportaciones\" number={2} color={\"#4caf50\"} />\r\n                <SidebarOption Icon={AssessmentIcon} title=\"Reportes\" number={2} color={\"#007bff\"} />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\firebase.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Body.js",["134"],"import React from 'react'\r\nimport './Body.css'\r\nimport Header from './Header'\r\nimport Client from './Client'\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className='body'>\r\n            {/* <Header />   */}\r\n            <Client header={\"Clientes\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Client.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\CreateClient.js",["135"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './CreateClient.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateClient, selectEditMode, selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction CreateClient() {\r\n    const editMode = useSelector(selectEditMode)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [clientName, setClientName] = useState('');\r\n    // const [dir1, setDir1] = useState('');\r\n    // const [dir2, setDir2] = useState('');\r\n    // const [dir3, setDir3] = useState('');\r\n    // const [rcf, setRfc] = useState('');\r\n\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            db.collection('clients').selectedClient.Id.set({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('clients').add({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function clientClose() {\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    return (<div className=\"createClient\">\r\n        <div className=\"createClient__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Cliente</h3>\r\n            <CloseIcon\r\n                className=\"createClient__close\"\r\n                onClick={clientClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Name:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='clientName'\r\n                // placeholder=\"Name\"\r\n                type=\"text\"\r\n                // value={editMode ? selectedClient?.Name : null}\r\n                value={clientName}\r\n                onChange={(e) => setClientName(e.target.value)}\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.clientName && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Address Line 1:</p>\r\n            </div>\r\n            <input\r\n                name='dir1'\r\n                placeholder=''\r\n                value={editMode ? selectedClient?.dir1 : null}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.dir1 && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Address Line 2:</p>\r\n            </div>\r\n            <input\r\n                name='dir2'\r\n                // placeholder='Address Line 2'\r\n                value={editMode ? selectedClient?.dir2 : null}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Address Line 3:</p>\r\n            </div>\r\n            <input\r\n                name='dir3'\r\n                value={editMode ? selectedClient?.dir3 : null}\r\n                // placeholder='Address Line 3'\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>RFC:</p>\r\n            </div>\r\n            <input\r\n                name='rfc'\r\n                value={editMode ? selectedClient?.rfc : null}\r\n                // placeholder='RFC'\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.rfc && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"createClient__options\">\r\n                <Button\r\n                    className=\"createClient__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default CreateClient;","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\clientSlice.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\SidebarOption.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ClientRow.js",["136","137"],"import React from 'react'\r\nimport './ClientRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectClient } from './features/clientSlice';\r\nimport { useDispatch } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\n\r\nfunction ClientRow({ Id, Name, dir1, dir2, dir3, rfc }) {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openClient = () => {\r\n        dispatch(\r\n            selectClient({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                rfc,\r\n            })\r\n        );\r\n        // history.push(\"/mail\")\r\n        // console.log (Id, Name, dir1, dir2, dir3, rfc)\r\n\r\n    }\r\n\r\n    function deleteClient() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Cliente?\")) {\r\n            db.collection(\"clients\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectClient({\r\n                    Id: null,\r\n                    Name: null,\r\n                    dir1: null,\r\n                    dir2: null,\r\n                    dir3: null,\r\n                    rfc: null,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientRow\">\r\n            <div className=\"clientRowIcons\">\r\n                <IconButton className=\"clientRowIconsColor\">\r\n                    <div onClick={openClient} className=\"editIcon\">\r\n                        <ListAltIcon className=\"clientRowEditIcon\" />\r\n                    </div>\r\n                </IconButton>\r\n                <IconButton className=\"clientRowIconsColor\">\r\n                    <div className=\"deleteIcon\" onClick={deleteClient}>\r\n                        <DeleteIcon className=\"clientRowDeleteIcon\" />\r\n                    </div>\r\n                </IconButton>\r\n\r\n            </div>\r\n            {/* <div className=\"clientRowId\">{Id}</div> */}\r\n            <div className=\"clientRowName\">{Name}</div>\r\n            {/* <div className=\"clientRowDescription\">{Description}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientRow\r\n","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditClient.js",["138"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditClient.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateClient, selectEditMode, selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditClient() {\r\n    const editMode = useSelector(selectEditMode)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [clientName, setClientName] = useState(editMode ? selectedClient?.Name : '');\r\n    const [dir1, setDir1] = useState(editMode ? selectedClient?.dir1 : '');\r\n    const [dir2, setDir2] = useState(editMode ? selectedClient?.dir2 : '');\r\n    const [dir3, setDir3] = useState(editMode ? selectedClient?.dir3 : '');\r\n    const [rfc, setRFC] = useState(editMode ? selectedClient?.rfc : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedClient.Id;\r\n            db.collection('clients').doc(doc).set({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('clients').add({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function clientClose() {\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    return (<div className=\"createClient\">\r\n        <div className=\"createClient__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Cliente</h3>\r\n            <CloseIcon\r\n                className=\"createClient__close\"\r\n                onClick={clientClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Cliente:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='clientName'\r\n                type=\"text\"\r\n                value={clientName}\r\n                onChange={(e) => setClientName(e.target.value)}\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.clientName && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 1:</p>\r\n            </div>\r\n            <input\r\n                name='dir1'\r\n                value={dir1}\r\n                onChange={(e) => setDir1(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.dir1 && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 2:</p>\r\n            </div>\r\n            <input\r\n                name='dir2'\r\n                onChange={(e) => setDir2(e.target.value)}\r\n                value={dir2}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 3:</p>\r\n            </div>\r\n            <input\r\n                name='dir3'\r\n                value={dir3}\r\n                onChange={(e) => setDir3(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>RFC:</p>\r\n            </div>\r\n            <input\r\n                name='rfc'\r\n                value={rfc}\r\n                onChange={(e) => setRFC(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.rfc && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"createClient__options\">\r\n                <Button\r\n                    className=\"createClient__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditClient;","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditPart.js",["139"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditPart.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreatePart, selectEditModeP, selectOpenPart } from './features/partSlice'\r\nimport { selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditPart() {\r\n    const editMode = useSelector(selectEditModeP)\r\n    const selectedPart = useSelector(selectOpenPart)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [partName, setPartName] = useState(editMode ? selectedPart?.Name : '');\r\n    const [desc, setDesc] = useState(editMode ? selectedPart?.desc : '');\r\n    const [model, setModel] = useState(editMode ? selectedPart?.model : '');\r\n    const [nom, setNOM] = useState(editMode ? selectedPart?.nom : '');\r\n    const [coo, setCOO] = useState(editMode ? selectedPart?.coo : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedPart.Id;\r\n            db.collection('parts').doc(doc).set({\r\n                partName: formData.partName,\r\n                desc: formData.desc,\r\n                model: formData.model,\r\n                nom: formData.nom,\r\n                coo: formData.coo,\r\n                clientId: selectedClient.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('parts').add({\r\n                partName: formData.partName,\r\n                desc: formData.desc,\r\n                model: formData.model,\r\n                nom: formData.nom,\r\n                coo: formData.coo,\r\n                clientId: selectedClient.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreatePart())\r\n        // const selectedPart = useSelector(selectOpenPart)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function partClose() {\r\n        dispatch(closeCreatePart())\r\n    }\r\n\r\n    console.log(\"editModeAddPart:\", editMode)\r\n\r\n\r\n    return (<div className=\"createPart\">\r\n        <div className=\"createPart__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Parte</h3>\r\n            <CloseIcon\r\n                className=\"createPart__close\"\r\n                onClick={partClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Número:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='partName'\r\n                type=\"text\"\r\n                value={partName}\r\n                onChange={(e) => setPartName(e.target.value)}\r\n                ref={register({ required: true })}\r\n                tabindex=\"0\"\r\n            />\r\n            {errors.partName && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Descripción</p>\r\n            </div>\r\n            <input\r\n                name='desc'\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.desc && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Modelo:</p>\r\n            </div>\r\n            <input\r\n                name='model'\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>NOM:</p>\r\n            </div>\r\n            <input\r\n                name='nom'\r\n                value={nom}\r\n                onChange={(e) => setNOM(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.nom && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>País de Origen:</p>\r\n            </div>\r\n            <input\r\n                name='coo'\r\n                value={coo}\r\n                onChange={(e) => setCOO(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.coo && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n\r\n            <div className=\"createPart__options\">\r\n                <Button\r\n                    className=\"createPart__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditPart;","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\partSlice.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\PartRow.js",["140","141","142"],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\WhsZone.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ClientPart.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\whsSlice.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\features\\zoneSlice.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\WhsList.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ClientList.js",["143"],"import './ClientPart.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Client.css'\r\nimport ClientRow from './ClientRow'\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openCreateClient, selectOpenClient, changeToAdd } from './features/clientSlice'\r\nimport { db } from './firebase';\r\n\r\nfunction ClientList() {\r\n    const dispatch = useDispatch()\r\n    const selectedClient = useSelector(selectOpenClient)\r\n\r\n    const [clients, setClients] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(() => {\r\n        db.collection('clients')\r\n            .orderBy('clientName', 'asc')\r\n            .onSnapshot(snapshot =>\r\n                setClients(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            )\r\n    }, [])\r\n\r\n    function filterChange(e) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function addClient() {\r\n        dispatch(openCreateClient())\r\n        dispatch(changeToAdd())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"clientes2\">\r\n            <div className=\"clientes2Header\">\r\n                <div className=\"headerSearch2\"\r\n                    style={{ display: 'flex', color: 'red !important', justifyContent: \"center\" }}>\r\n                    <input\r\n                        placeholder='Buscar Cliente...'\r\n                        onChange={filterChange}\r\n                    >\r\n                    </input>\r\n                </div>\r\n                <div className=\"clientHeader\">\r\n                    <p style={{ marginLeft: '20px' }}>Clientes</p>\r\n                    <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                        {selectedClient?.Name}</p>\r\n\r\n                    <IconButton className=\"\">\r\n                        <div className=\"\" >\r\n                            <AddCircleIcon\r\n                                onClick={addClient}\r\n                                className=\"addClientIcon\" />\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"clientListRows2\">\r\n                {clients.filter(c => c.data.clientName.includes(filter)).map(({ id, data: { clientName, dir1, dir2, dir3, rfc, timestamp }\r\n                }) => (\r\n                    <ClientRow\r\n                        Id={id}\r\n                        key={id}\r\n                        Name={clientName}\r\n                        dir1={dir1}\r\n                        dir2={dir2}\r\n                        dir3={dir3}\r\n                        rfc={rfc}\r\n                        time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientList\r\n","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\PartList.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ZoneList.js",[],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\WhsRow.js",["144","145","146"],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\ZoneRow.js",["147","148","149"],"import React from 'react'\r\nimport './PartRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectZone, changeToEditZ, openCreateZone, selectOpenZone } from './features/zoneSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport { selectOpenWhs, } from './features/whsSlice'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nfunction ZoneRow({ Id, Name, desc, whsId }) {\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const selectedZone = useSelector(selectOpenZone)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openZone = () => {\r\n        dispatch(\r\n            selectZone({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                whsId,\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    function deleteZone() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Locación: \" + Name + \"?\")) {\r\n            db.collection(\"zones\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectZone({\r\n                    Id: null,\r\n                    Name,\r\n                    desc,\r\n                    whsId,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function editZone(whs) {\r\n        dispatch(\r\n            selectZone({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                whsId,\r\n            })\r\n        );\r\n        dispatch(changeToEditZ())\r\n        dispatch(openCreateZone())\r\n\r\n    }\r\n\r\n    if (selectedWhs?.Id === whsId) {\r\n        return (\r\n            <div className=\"partRow\">\r\n                <div className=\"partRowIcons\">\r\n                    <IconButton>\r\n                        <EditIcon\r\n                            className=\"clientDetailsEditIcon\"\r\n                            onClick={() => editZone(selectedZone?.Id)}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton className=\"partRowIconsColor\">\r\n                        <div className=\"deleteIcon\" onClick={deleteZone}>\r\n                            <DeleteIcon className=\"partRowDeleteIcon\"\r\n                            />\r\n\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <div className=\"partRowName\"><strong>{Name}</strong> {\" - \" + desc.substring(0, 30) + \"...\"}</div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (null)\r\n    }\r\n}\r\n\r\nexport default ZoneRow\r\n","C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditWhs.js",["150"],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\AddEditZone.js",["151"],"C:\\Users\\franc\\OneDrive\\Documents\\GitHub\\whs360-21-01\\src\\Receipts.js",["152","153"],{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"158","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":12},{"ruleId":"154","severity":1,"message":"159","line":17,"column":10,"nodeType":"156","messageId":"157","endLine":17,"endColumn":21},{"ruleId":"154","severity":1,"message":"160","line":18,"column":10,"nodeType":"156","messageId":"157","endLine":18,"endColumn":14},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"154","severity":1,"message":"165","line":20,"column":14,"nodeType":"156","messageId":"157","endLine":20,"endColumn":20},{"ruleId":"154","severity":1,"message":"166","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"167","line":23,"column":37,"nodeType":"156","messageId":"157","endLine":23,"endColumn":42},{"ruleId":"154","severity":1,"message":"168","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":19},{"ruleId":"154","severity":1,"message":"169","line":15,"column":11,"nodeType":"156","messageId":"157","endLine":15,"endColumn":18},{"ruleId":"154","severity":1,"message":"167","line":22,"column":37,"nodeType":"156","messageId":"157","endLine":22,"endColumn":42},{"ruleId":"154","severity":1,"message":"167","line":22,"column":37,"nodeType":"156","messageId":"157","endLine":22,"endColumn":42},{"ruleId":"154","severity":1,"message":"170","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":19},{"ruleId":"154","severity":1,"message":"169","line":17,"column":11,"nodeType":"156","messageId":"157","endLine":17,"endColumn":18},{"ruleId":"154","severity":1,"message":"171","line":20,"column":11,"nodeType":"156","messageId":"157","endLine":20,"endColumn":19},{"ruleId":"154","severity":1,"message":"172","line":8,"column":46,"nodeType":"156","messageId":"157","endLine":8,"endColumn":58},{"ruleId":"154","severity":1,"message":"168","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":19},{"ruleId":"154","severity":1,"message":"170","line":12,"column":8,"nodeType":"156","messageId":"157","endLine":12,"endColumn":19},{"ruleId":"154","severity":1,"message":"169","line":20,"column":11,"nodeType":"156","messageId":"157","endLine":20,"endColumn":18},{"ruleId":"154","severity":1,"message":"170","line":11,"column":8,"nodeType":"156","messageId":"157","endLine":11,"endColumn":19},{"ruleId":"154","severity":1,"message":"169","line":19,"column":11,"nodeType":"156","messageId":"157","endLine":19,"endColumn":18},{"ruleId":"154","severity":1,"message":"173","line":22,"column":11,"nodeType":"156","messageId":"157","endLine":22,"endColumn":19},{"ruleId":"154","severity":1,"message":"167","line":22,"column":37,"nodeType":"156","messageId":"157","endLine":22,"endColumn":42},{"ruleId":"154","severity":1,"message":"167","line":24,"column":37,"nodeType":"156","messageId":"157","endLine":24,"endColumn":42},{"ruleId":"154","severity":1,"message":"167","line":19,"column":37,"nodeType":"156","messageId":"157","endLine":19,"endColumn":42},{"ruleId":"154","severity":1,"message":"174","line":19,"column":44,"nodeType":"156","messageId":"157","endLine":19,"endColumn":50},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Body' is defined but never used.","'useDispatch' is defined but never used.","'auth' is defined but never used.","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'alerta' is defined but never used.","'Header' is defined but never used.","'watch' is assigned a value but never used.","'DetailsIcon' is defined but never used.","'history' is assigned a value but never used.","'ListAltIcon' is defined but never used.","'openPart' is assigned a value but never used.","'changeToEdit' is defined but never used.","'openZone' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]