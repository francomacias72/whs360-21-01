[{"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\index.js":"1","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\App.js":"2","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\app\\store.js":"3","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Sidebar.js":"4","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Body.js":"5","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\firebase.js":"6","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Header.js":"7","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\CreateClient.js":"8","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Client.js":"9","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\clientSlice.js":"10","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\SidebarOption.js":"11","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientRow.js":"12","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditClient.js":"13","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartRow.js":"14","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\partSlice.js":"15","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditPart.js":"16","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientPart.js":"17","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartList.js":"18","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientList.js":"19","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsZone.js":"20","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsList.js":"21","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\whsSlice.js":"22","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsRow.js":"23","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\zoneSlice.js":"24","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneList.js":"25","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneRow.js":"26","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditWhs.js":"27","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditZone.js":"28","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Receipts.js":"29"},{"size":360,"mtime":1611689664369,"results":"30","hashOfConfig":"31"},{"size":2136,"mtime":1612632365017,"results":"32","hashOfConfig":"31"},{"size":432,"mtime":1612537354891,"results":"33","hashOfConfig":"31"},{"size":2099,"mtime":1612571941157,"results":"34","hashOfConfig":"31"},{"size":304,"mtime":1611689664356,"results":"35","hashOfConfig":"31"},{"size":741,"mtime":1612297560172,"results":"36","hashOfConfig":"31"},{"size":1145,"mtime":1612376651099,"results":"37","hashOfConfig":"31"},{"size":4842,"mtime":1611846719549,"results":"38","hashOfConfig":"31"},{"size":7036,"mtime":1612388852210,"results":"39","hashOfConfig":"31"},{"size":1143,"mtime":1611717959887,"results":"40","hashOfConfig":"31"},{"size":433,"mtime":1611689664366,"results":"41","hashOfConfig":"31"},{"size":3580,"mtime":1612368417204,"results":"42","hashOfConfig":"31"},{"size":4821,"mtime":1612301087742,"results":"43","hashOfConfig":"31"},{"size":3949,"mtime":1612574748088,"results":"44","hashOfConfig":"31"},{"size":1108,"mtime":1612372193975,"results":"45","hashOfConfig":"31"},{"size":5199,"mtime":1612449935232,"results":"46","hashOfConfig":"31"},{"size":317,"mtime":1612413351248,"results":"47","hashOfConfig":"31"},{"size":3130,"mtime":1612670690744,"results":"48","hashOfConfig":"31"},{"size":3004,"mtime":1612670543186,"results":"49","hashOfConfig":"31"},{"size":308,"mtime":1612537752848,"results":"50","hashOfConfig":"31"},{"size":2964,"mtime":1612670582252,"results":"51","hashOfConfig":"31"},{"size":1081,"mtime":1612540127289,"results":"52","hashOfConfig":"31"},{"size":3063,"mtime":1612536898816,"results":"53","hashOfConfig":"31"},{"size":1108,"mtime":1612537332787,"results":"54","hashOfConfig":"31"},{"size":3156,"mtime":1612624618905,"results":"55","hashOfConfig":"31"},{"size":2889,"mtime":1612628877057,"results":"56","hashOfConfig":"31"},{"size":4748,"mtime":1612625159639,"results":"57","hashOfConfig":"31"},{"size":5206,"mtime":1612626557378,"results":"58","hashOfConfig":"31"},{"size":12694,"mtime":1612725769225,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"9jinjv",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\index.js",[],["131","132"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\App.js",["133","134","135","136"],"import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Sidebar from './Sidebar'\r\nimport Header from './Header'\r\nimport Body from './Body'\r\n// import CreateClient from './CreateClient'\r\nimport AddEditClient from './AddEditClient'\r\nimport { selectCreateClientIsOpen } from './features/clientSlice'\r\nimport { selectCreatePartIsOpen } from './features/partSlice'\r\nimport { selectCreateWhsIsOpen } from './features/whsSlice'\r\nimport { selectCreateZoneIsOpen } from './features/zoneSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth } from './firebase';\r\nimport Client from './Client';\r\n// import Part from './Part2';\r\nimport AddEditPart from './AddEditPart'\r\nimport WhsZone from './WhsZone';\r\nimport ClientPart from './ClientPart';\r\nimport AddEditWhs from './AddEditWhs';\r\nimport AddEditZone from './AddEditZone';\r\nimport Receipts from './Receipts';\r\n\r\n\r\nfunction App() {\r\n  const createClientIsOpen = useSelector(selectCreateClientIsOpen)\r\n  const createPartIsOpen = useSelector(selectCreatePartIsOpen)\r\n  const createWhsIsOpen = useSelector(selectCreateWhsIsOpen)\r\n  const createZoneIsOpen = useSelector(selectCreateZoneIsOpen)\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Sidebar />\r\n\r\n        <div className=\"app__body\">\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/client\">\r\n              <Client />\r\n            </Route>\r\n            <Route path=\"/clientes\">\r\n              <ClientPart />\r\n            </Route>\r\n            <Route path=\"/bodegas\">\r\n              <WhsZone />\r\n            </Route>\r\n            <Route path=\"/recibos\">\r\n              <Receipts />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <ClientPart />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n\r\n        {createClientIsOpen && <AddEditClient />}\r\n        {createPartIsOpen && <AddEditPart />}\r\n        {createWhsIsOpen && <AddEditWhs />}\r\n        {createZoneIsOpen && <AddEditZone />}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\app\\store.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Sidebar.js",["137","138"],"import React from 'react'\r\nimport './Sidebar.css'\r\nimport logo from './360logo.png'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarOption from './SidebarOption'\r\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n    const history = useHistory()\r\n\r\n    function alerta() {\r\n        history.push(\"/client\")\r\n    }\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div class=\"sidebar__top\">\r\n                <img src={logo} alt=\"\" />\r\n                <h1>WHS 360</h1>\r\n            </div>\r\n            <div className=\"sidebarOptions\">\r\n                <div onClick={() => history.push(\"/client\")}> <SidebarOption Icon={PersonIcon} title=\"Clientes/Partes\" number={5} color={\"#A53AB7\"} /> </div>\r\n                {/* <div onClick={() => history.push(\"/part\")}><SidebarOption Icon={ViewHeadlineIcon} title=\"Partes\" number={4} color={\"#4caf50\"} /></div> */}\r\n                <div onClick={() => history.push(\"/bodegas\")}><SidebarOption Icon={StoreIcon} title=\"Bodegas/Locaciones\" number={2} color={\"#fd7e14\"} /></div>\r\n                <SidebarOption Icon={AccountTreeIcon} title=\"Inventarios\" number={2} color={\"#6c757d\"} />\r\n                <SidebarOption Icon={ReceiptIcon} title=\"Recibos\" number={25} color={\"#17a2b8\"} />\r\n                <SidebarOption Icon={LocalShippingIcon} title=\"Embarques\" number={2} color={\"#e83e8c\"} />\r\n                <SidebarOption Icon={ImportExportIcon} title=\"Exportaciones\" number={2} color={\"#4caf50\"} />\r\n                <SidebarOption Icon={AssessmentIcon} title=\"Reportes\" number={2} color={\"#007bff\"} />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Body.js",["139"],"import React from 'react'\r\nimport './Body.css'\r\nimport Header from './Header'\r\nimport Client from './Client'\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className='body'>\r\n            {/* <Header />   */}\r\n            <Client header={\"Clientes\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\firebase.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Header.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\CreateClient.js",["140"],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Client.js",["141","142","143","144","145","146"],"import React, { useEffect, useState } from 'react'\r\nimport './Client.css'\r\nimport ClientRow from './ClientRow'\r\nimport PartRow from './PartRow'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openCreateClient, selectOpenClient, changeToEdit, changeToAdd } from './features/clientSlice'\r\nimport { openCreatePart, selectOpenPart, changeToEditP, changeToAddP } from './features/partSlice'\r\nimport { db } from './firebase';\r\n\r\n\r\n\r\nfunction Client({ header }) {\r\n    const dispatch = useDispatch()\r\n    const selectedClient = useSelector(selectOpenClient)\r\n\r\n    const [clients, setClients] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(() => {\r\n        db.collection('clients')\r\n            .orderBy('clientName', 'asc')\r\n            .onSnapshot(snapshot =>\r\n                setClients(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            )\r\n    }, [])\r\n\r\n    const [parts, setParts] = useState([])\r\n    const [filterP, setFilterP] = useState('')\r\n\r\n    useEffect(() => {\r\n        db.collection('parts')\r\n            // .where('clientId', '==', 'djBwgyZYFee0SVAuBIfl')\r\n            .orderBy('partName', 'asc')\r\n            .onSnapshot(snapshot =>\r\n                setParts(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            )\r\n    }, [])\r\n\r\n    function filterChange(e) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function filterChangeP(e) {\r\n        setFilterP(e.target.value)\r\n    }\r\n    // clients.filter(c => c.data.rfc.includes('E'))\r\n    // console.log(clients.filter(c => c.data.rfc.includes('E')))\r\n    function editClient(client) {\r\n        if (selectedClient?.Id) {\r\n            dispatch(changeToEdit())\r\n            dispatch(openCreateClient())\r\n        }\r\n    }\r\n    function addClient() {\r\n        dispatch(openCreateClient())\r\n        dispatch(changeToAdd())\r\n    }\r\n\r\n    function addPart() {\r\n        dispatch(openCreatePart())\r\n        dispatch(changeToAddP())\r\n    }\r\n\r\n    return (\r\n        <div className=\"client\">\r\n\r\n            <div className=\"clientMain\">\r\n\r\n                <div className=\"headerMain\">\r\n                    <div className=\"headerRow\">\r\n                        <div className=\"headerSearch\">\r\n                            <input\r\n                                placeholder='Buscar Cliente...'\r\n                                onChange={filterChange}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clientHeader\">\r\n                        <p style={{ marginLeft: '20px' }}>Clientes</p>\r\n                        {/* <div className=\"clientNameHeader\"> */}\r\n                        <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                            {selectedClient?.Name}</p>\r\n                        {/* </div> */}\r\n\r\n                        <IconButton className=\"\">\r\n                            <div className=\"\" >\r\n                                <AddCircleIcon onClick={addClient} className=\"addPartIcon\" />\r\n                            </div>\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"listMain\">\r\n                    <div className=\"clientList\">\r\n\r\n                        <div className=\"clientListRows\">\r\n                            {clients.filter(c => c.data.clientName.includes(filter)).map(({ id, data: { clientName, dir1, dir2, dir3, rfc, timestamp }\r\n                            }) => (\r\n                                <ClientRow\r\n                                    Id={id}\r\n                                    key={id}\r\n                                    Name={clientName}\r\n                                    dir1={dir1}\r\n                                    dir2={dir2}\r\n                                    dir3={dir3}\r\n                                    rfc={rfc}\r\n                                    time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"clientSecondary\">\r\n                <div className=\"headerSecondary\">\r\n                    <div className=\"clientDetails\">\r\n                        <div className=\"headerRow\">\r\n                            <div className=\"headerSearch\">\r\n                                <input\r\n                                    placeholder='Buscar Parte...'\r\n                                    onChange={filterChangeP}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clientDetailsHeader\">\r\n                            <p style={{ marginLeft: '20px' }}>Partes</p>\r\n                            {/* <div className=\"clientNameHeader\"> */}\r\n                            <p style={{ fontSize: '14px', color: 'lightblue', textTransform: \"none\", margin: '0' }}>\r\n                                {selectedClient?.Name}</p>\r\n                            {/* </div> */}\r\n\r\n                            <IconButton className=\"\">\r\n                                <div className=\"\" >\r\n                                    <AddCircleIcon onClick={addPart} className=\"addPartIcon\" />\r\n                                </div>\r\n                            </IconButton>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"partListRows\">\r\n                        {parts.filter(c => c.data.partName.includes(filterP)).map(({ id, data: { partName, desc, model, nom, coo, clientId, timestamp }\r\n                        }) => (\r\n                            <PartRow\r\n                                Id={id}\r\n                                key={id}\r\n                                Name={partName}\r\n                                desc={desc}\r\n                                model={model}\r\n                                nom={nom}\r\n                                coo={coo}\r\n                                clientId={clientId}\r\n                                time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\clientSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\SidebarOption.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientRow.js",["147","148","149"],"import React from 'react'\r\nimport './ClientRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectClient } from './features/clientSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { openCreateClient, changeToEdit, selectOpenClient, } from './features/clientSlice'\r\n\r\n\r\n\r\nfunction ClientRow({ Id, Name, dir1, dir2, dir3, rfc }) {\r\n    const selectedClient = useSelector(selectOpenClient)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openClient = () => {\r\n        dispatch(\r\n            selectClient({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                rfc,\r\n            })\r\n        );\r\n    }\r\n\r\n    function deleteClient() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Cliente?\")) {\r\n            db.collection(\"clients\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectClient({\r\n                    Id: null,\r\n                    Name: null,\r\n                    dir1: null,\r\n                    dir2: null,\r\n                    dir3: null,\r\n                    rfc: null,\r\n                })\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    function editClient(client) {\r\n        dispatch(\r\n            selectClient({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                rfc,\r\n            })\r\n        );\r\n        dispatch(changeToEdit())\r\n        dispatch(openCreateClient())\r\n        // if (selectedClient?.Id) {\r\n        //    dispatch(changeToEdit())\r\n        //    dispatch(openCreateClient())    \r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientRow\">\r\n            <div className=\"clientRowIcons\">\r\n                {/* <IconButton className=\"clientRowIconsColor\">\r\n                    <div onClick={openClient} className=\"editIcon\">\r\n                        <ListAltIcon className=\"clientRowEditIcon\" />\r\n                    </div>\r\n                </IconButton> */}\r\n                <IconButton>\r\n                    {/* <div className=\"\" > */}\r\n                    <EditIcon\r\n                        className=\"clientDetailsEditIcon\"\r\n                        onClick={() => editClient(selectedClient?.Id)}\r\n                    />\r\n                    {/* </div> */}\r\n                </IconButton>\r\n                <IconButton className=\"clientRowIconsColor\">\r\n                    <div className=\"deleteIcon\" onClick={deleteClient}>\r\n                        <DeleteIcon className=\"clientRowDeleteIcon\" />\r\n                    </div>\r\n                </IconButton>\r\n\r\n            </div>\r\n            {/* <div className=\"clientRowId\">{Id}</div> */}\r\n            <div className=\"clientRowName\"\r\n                onClick={openClient}\r\n                style={{ cursor: 'pointer' }}\r\n            >{Name}</div>\r\n            {/* <div className=\"clientRowDescription\">{Description}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditClient.js",["150"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditClient.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateClient, selectEditMode, selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditClient() {\r\n    const editMode = useSelector(selectEditMode)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [clientName, setClientName] = useState(editMode ? selectedClient?.Name : '');\r\n    const [dir1, setDir1] = useState(editMode ? selectedClient?.dir1 : '');\r\n    const [dir2, setDir2] = useState(editMode ? selectedClient?.dir2 : '');\r\n    const [dir3, setDir3] = useState(editMode ? selectedClient?.dir3 : '');\r\n    const [rfc, setRFC] = useState(editMode ? selectedClient?.rfc : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedClient.Id;\r\n            db.collection('clients').doc(doc).set({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('clients').add({\r\n                clientName: formData.clientName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                rfc: formData.rfc,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function clientClose() {\r\n        dispatch(closeCreateClient())\r\n    }\r\n\r\n    return (<div className=\"createClient\">\r\n        <div className=\"createClient__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Cliente</h3>\r\n            <CloseIcon\r\n                className=\"createClient__close\"\r\n                onClick={clientClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Cliente:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='clientName'\r\n                type=\"text\"\r\n                value={clientName}\r\n                onChange={(e) => setClientName(e.target.value)}\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.clientName && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 1:</p>\r\n            </div>\r\n            <input\r\n                name='dir1'\r\n                value={dir1}\r\n                onChange={(e) => setDir1(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.dir1 && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 2:</p>\r\n            </div>\r\n            <input\r\n                name='dir2'\r\n                onChange={(e) => setDir2(e.target.value)}\r\n                value={dir2}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 3:</p>\r\n            </div>\r\n            <input\r\n                name='dir3'\r\n                value={dir3}\r\n                onChange={(e) => setDir3(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>RFC:</p>\r\n            </div>\r\n            <input\r\n                name='rfc'\r\n                value={rfc}\r\n                onChange={(e) => setRFC(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.rfc && <p className=\"createClient__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"createClient__options\">\r\n                <Button\r\n                    className=\"createClient__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditClient;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartRow.js",["151","152","153"],"import React from 'react'\r\nimport './PartRow.css'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectPart, changeToEditP, openCreatePart, selectOpenPart } from './features/partSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { selectOpenClient, } from './features/clientSlice'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nfunction PartRow({ Id, Name, desc, model, nom, coo, clientId }) {\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const selectedPart = useSelector(selectOpenPart)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openPart = () => {\r\n        dispatch(\r\n            selectPart({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                model,\r\n                nom,\r\n                coo,\r\n                clientId,\r\n            })\r\n        );\r\n        // history.push(\"/mail\")\r\n        // console.log (Id, Name, dir1, dir2, dir3, rfc)\r\n\r\n    }\r\n\r\n    function deletePart() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Parte: \" + Name + \"?\")) {\r\n            db.collection(\"parts\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectPart({\r\n                    Id: null,\r\n                    Name,\r\n                    desc,\r\n                    model,\r\n                    nom,\r\n                    coo,\r\n                    clientId,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function editPart(client) {\r\n        dispatch(\r\n            selectPart({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                model,\r\n                nom,\r\n                coo,\r\n                clientId,\r\n            })\r\n        );\r\n        dispatch(changeToEditP())\r\n        dispatch(openCreatePart())\r\n        // if (selectedClient?.Id) {\r\n        //    dispatch(changeToEdit())\r\n        //    dispatch(openCreateClient())    \r\n        // }\r\n    }\r\n\r\n    // console.log(\"selected id: \", selectedClient?.Id)\r\n    // console.log(\"clientId: \", clientId)\r\n    if (selectedClient?.Id === clientId) {\r\n        return (\r\n\r\n            <div className=\"partRow\">\r\n                <div className=\"partRowIcons\">\r\n                    {/* <IconButton className=\"partRowIconsColor\">\r\n                        <div onClick={openPart} className=\"editIcon\">\r\n                            <ListAltIcon className=\"partRowEditIcon\" />\r\n                        </div>\r\n                    </IconButton> */}\r\n                    <IconButton>\r\n                        {/* <div className=\"\" > */}\r\n                        <EditIcon\r\n                            className=\"clientDetailsEditIcon\"\r\n                            onClick={() => editPart(selectedPart?.Id)}\r\n                        />\r\n                        {/* </div> */}\r\n                    </IconButton>\r\n                    <IconButton className=\"partRowIconsColor\">\r\n                        <div className=\"deleteIcon\" onClick={deletePart}>\r\n                            <DeleteIcon className=\"partRowDeleteIcon\"\r\n                            />\r\n\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                {/* <div className=\"partRowId\">{Id}</div> */}\r\n                <div className=\"partRowName\"><strong>{Name}</strong> {\" - \" + desc.substring(0, 30) + \"...\"}</div>\r\n                {/* <div className=\"partRowDescription\">{Description}</div> */}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (null)\r\n    }\r\n}\r\n\r\nexport default PartRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\partSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditPart.js",["154"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditPart.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreatePart, selectEditModeP, selectOpenPart } from './features/partSlice'\r\nimport { selectOpenClient } from './features/clientSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditPart() {\r\n    const editMode = useSelector(selectEditModeP)\r\n    const selectedPart = useSelector(selectOpenPart)\r\n    const selectedClient = useSelector(selectOpenClient)\r\n    const [partName, setPartName] = useState(editMode ? selectedPart?.Name : '');\r\n    const [desc, setDesc] = useState(editMode ? selectedPart?.desc : '');\r\n    const [model, setModel] = useState(editMode ? selectedPart?.model : '');\r\n    const [nom, setNOM] = useState(editMode ? selectedPart?.nom : '');\r\n    const [coo, setCOO] = useState(editMode ? selectedPart?.coo : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedPart.Id;\r\n            db.collection('parts').doc(doc).set({\r\n                partName: formData.partName,\r\n                desc: formData.desc,\r\n                model: formData.model,\r\n                nom: formData.nom,\r\n                coo: formData.coo,\r\n                clientId: selectedClient.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('parts').add({\r\n                partName: formData.partName,\r\n                desc: formData.desc,\r\n                model: formData.model,\r\n                nom: formData.nom,\r\n                coo: formData.coo,\r\n                clientId: selectedClient.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreatePart())\r\n        // const selectedPart = useSelector(selectOpenPart)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function partClose() {\r\n        dispatch(closeCreatePart())\r\n    }\r\n\r\n    console.log(\"editModeAddPart:\", editMode)\r\n\r\n\r\n    return (<div className=\"createPart\">\r\n        <div className=\"createPart__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Parte</h3>\r\n            <CloseIcon\r\n                className=\"createPart__close\"\r\n                onClick={partClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Número:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='partName'\r\n                type=\"text\"\r\n                value={partName}\r\n                onChange={(e) => setPartName(e.target.value)}\r\n                ref={register({ required: true })}\r\n                tabindex=\"0\"\r\n            />\r\n            {errors.partName && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Descripción</p>\r\n            </div>\r\n            <input\r\n                name='desc'\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.desc && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Modelo:</p>\r\n            </div>\r\n            <input\r\n                name='model'\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>NOM:</p>\r\n            </div>\r\n            <input\r\n                name='nom'\r\n                value={nom}\r\n                onChange={(e) => setNOM(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.nom && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>País de Origen:</p>\r\n            </div>\r\n            <input\r\n                name='coo'\r\n                value={coo}\r\n                onChange={(e) => setCOO(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.coo && <p className=\"createPart__error\">Campo Requerido...</p>}\r\n\r\n\r\n            <div className=\"createPart__options\">\r\n                <Button\r\n                    className=\"createPart__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditPart;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientPart.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\PartList.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ClientList.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsZone.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsList.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\whsSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\WhsRow.js",["155","156","157"],"import React from 'react'\r\nimport './ClientRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\n// import { selectWhs } from './features/clientSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { openCreateWhs, changeToEditW, selectOpenWhs, selectWhs } from './features/whsSlice'\r\n\r\n\r\n\r\nfunction WhsRow({ Id, Name, dir1, dir2, dir3, active }) {\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openWhs = () => {\r\n        dispatch(\r\n            selectWhs({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                active,\r\n            })\r\n        );\r\n    }\r\n\r\n    function deleteWhs() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar esta Bodega?\")) {\r\n            db.collection(\"warehouses\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectWhs({\r\n                    Id: null,\r\n                    Name: null,\r\n                    dir1: null,\r\n                    dir2: null,\r\n                    dir3: null,\r\n                    active: null,\r\n                })\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    function editWhs(client) {\r\n        dispatch(\r\n            selectWhs({\r\n                Id,\r\n                Name,\r\n                dir1,\r\n                dir2,\r\n                dir3,\r\n                active,\r\n            })\r\n        );\r\n        dispatch(changeToEditW())\r\n        dispatch(openCreateWhs())\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientRow\">\r\n            <div className=\"clientRowIcons\">\r\n                <IconButton>\r\n                    <EditIcon\r\n                        className=\"clientDetailsEditIcon\"\r\n                        onClick={() => editWhs(selectedWhs?.Id)}\r\n                    />\r\n                </IconButton>\r\n                <IconButton className=\"clientRowIconsColor\">\r\n                    <div className=\"deleteIcon\" onClick={deleteWhs}>\r\n                        <DeleteIcon className=\"clientRowDeleteIcon\" />\r\n                    </div>\r\n                </IconButton>\r\n\r\n            </div>\r\n            {/* <div className=\"clientRowId\">{Id}</div> */}\r\n            <div className=\"clientRowName\"\r\n                onClick={openWhs}\r\n                style={{ cursor: 'pointer' }}\r\n            >{Name}</div>\r\n            {/* <div className=\"clientRowDescription\">{Description}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhsRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\features\\zoneSlice.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneList.js",[],"C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\ZoneRow.js",["158","159"],"import React from 'react'\r\nimport './PartRow.css'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import DetailsIcon from '@material-ui/icons/Details';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { selectZone, changeToEditZ, openCreateZone, selectOpenZone } from './features/zoneSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { db } from './firebase';\r\nimport { selectOpenWhs, } from './features/whsSlice'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nfunction ZoneRow({ Id, Name, desc, whsId }) {\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const selectedZone = useSelector(selectOpenZone)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const openZone = () => {\r\n        dispatch(\r\n            selectZone({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                whsId,\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    function deleteZone() {\r\n        if (window.confirm(\"¿Está seguro que quiere borrar Locación: \" + Name + \"?\")) {\r\n            db.collection(\"zones\").doc(Id).delete().then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            dispatch(\r\n                selectZone({\r\n                    Id: null,\r\n                    Name,\r\n                    desc,\r\n                    whsId,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function editZone(whs) {\r\n        dispatch(\r\n            selectZone({\r\n                Id,\r\n                Name,\r\n                desc,\r\n                whsId,\r\n            })\r\n        );\r\n        dispatch(changeToEditZ())\r\n        dispatch(openCreateZone())\r\n\r\n    }\r\n\r\n    if (selectedWhs?.Id === whsId) {\r\n        return (\r\n            <div className=\"partRow\">\r\n                <div className=\"partRowIcons\">\r\n                    <IconButton>\r\n                        <EditIcon\r\n                            className=\"clientDetailsEditIcon\"\r\n                            onClick={() => editZone(selectedZone?.Id)}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton className=\"partRowIconsColor\">\r\n                        <div className=\"deleteIcon\" onClick={deleteZone}>\r\n                            <DeleteIcon className=\"partRowDeleteIcon\"\r\n                            />\r\n\r\n                        </div>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <div className=\"partRowName\"><strong>{Name}</strong> {\" - \" + desc.substring(0, 30) + \"...\"}</div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (null)\r\n    }\r\n}\r\n\r\nexport default ZoneRow\r\n","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditWhs.js",["160"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditClient.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateWhs, selectEditMode, selectOpenWhs } from './features/whsSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditWhs() {\r\n    const editMode = useSelector(selectEditMode)\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const [whsName, setWhsName] = useState(editMode ? selectedWhs?.Name : '');\r\n    const [dir1, setDir1] = useState(editMode ? selectedWhs?.dir1 : '');\r\n    const [dir2, setDir2] = useState(editMode ? selectedWhs?.dir2 : '');\r\n    const [dir3, setDir3] = useState(editMode ? selectedWhs?.dir3 : '');\r\n    const [active, setActive] = useState(editMode ? selectedWhs?.active : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedWhs.Id;\r\n            db.collection('warehouses').doc(doc).set({\r\n                whsName: formData.whsName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                active: true,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('warehouses').add({\r\n                whsName: formData.whsName,\r\n                dir1: formData.dir1,\r\n                dir2: formData.dir2,\r\n                dir3: formData.dir3,\r\n                active: true,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateWhs())\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function whsClose() {\r\n        dispatch(closeCreateWhs())\r\n    }\r\n\r\n    return (<div className=\"createClient\">\r\n        <div className=\"createClient__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Bodega</h3>\r\n            <CloseIcon\r\n                className=\"createClient__close\"\r\n                onClick={whsClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Bodega:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='whsName'\r\n                type=\"text\"\r\n                value={whsName}\r\n                onChange={(e) => setWhsName(e.target.value)}\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.whsName && <p className=\"createWhs__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 1:</p>\r\n            </div>\r\n            <input\r\n                name='dir1'\r\n                value={dir1}\r\n                onChange={(e) => setDir1(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.dir1 && <p className=\"createWhs__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 2:</p>\r\n            </div>\r\n            <input\r\n                name='dir2'\r\n                onChange={(e) => setDir2(e.target.value)}\r\n                value={dir2}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Dir 3:</p>\r\n            </div>\r\n            <input\r\n                name='dir3'\r\n                value={dir3}\r\n                onChange={(e) => setDir3(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Active:</p>\r\n            </div>\r\n            <input\r\n                name='active'\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n                type=\"text\"\r\n            // ref={register({ required: true })}\r\n            />\r\n            {errors.active && <p className=\"createWhs__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"createClient__options\">\r\n                <Button\r\n                    className=\"createClient__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditWhs;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\AddEditZone.js",["161"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport './AddEditZone.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateZone, selectEditModeZ, selectOpenZone } from './features/zoneSlice'\r\nimport { selectOpenWhs } from './features/whsSlice'\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nfunction AddEditZone() {\r\n    const editMode = useSelector(selectEditModeZ)\r\n    const selectedZone = useSelector(selectOpenZone)\r\n    const selectedWhs = useSelector(selectOpenWhs)\r\n    const [zoneName, setZoneName] = useState(editMode ? selectedZone?.Name : '');\r\n    const [desc, setDesc] = useState(editMode ? selectedZone?.desc : '');\r\n    // const [model, setModel] = useState(editMode ? selectedZone?.model : '');\r\n    // const [nom, setNOM] = useState(editMode ? selectedZone?.nom : '');\r\n    // const [coo, setCOO] = useState(editMode ? selectedZone?.coo : '');\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n        if (editMode) {\r\n            const doc = selectedZone.Id;\r\n            db.collection('zones').doc(doc).set({\r\n                zoneName: formData.zoneName,\r\n                desc: formData.desc,\r\n                // model: formData.model,\r\n                // nom: formData.nom,\r\n                // coo: formData.coo,\r\n                whsId: selectedWhs.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        else {\r\n            db.collection('zones').add({\r\n                zoneName: formData.zoneName,\r\n                desc: formData.desc,\r\n                // model: formData.model,\r\n                // nom: formData.nom,\r\n                // coo: formData.coo,\r\n                whsId: selectedWhs.Id,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        dispatch(closeCreateZone())\r\n        // const selectedZone = useSelector(selectOpenZone)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function zoneClose() {\r\n        dispatch(closeCreateZone())\r\n    }\r\n\r\n    console.log(\"editModeAddZone:\", editMode)\r\n\r\n\r\n    return (<div className=\"createZone\">\r\n        <div className=\"createZone__header\">\r\n            <h3>{editMode === true ? \"Editar \" : \"Agregar \"} Zona</h3>\r\n            <CloseIcon\r\n                className=\"createZone__close\"\r\n                onClick={zoneClose}\r\n            />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* <form> */}\r\n            <div className=\"fieldHeader\">\r\n                <p>Zona:</p>\r\n            </div>\r\n\r\n            <input\r\n                name='zoneName'\r\n                type=\"text\"\r\n                value={zoneName}\r\n                onChange={(e) => setZoneName(e.target.value)}\r\n                ref={register({ required: true })}\r\n                tabindex=\"0\"\r\n            />\r\n            {errors.zoneName && <p className=\"createZone__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>Descripción</p>\r\n            </div>\r\n            <input\r\n                name='desc'\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.desc && <p className=\"createZone__error\">Campo Requerido...</p>}\r\n\r\n            {/* <div className=\"fieldHeader\">\r\n                <p>Modelo:</p>\r\n            </div>\r\n            <input\r\n                name='model'\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n                type=\"text\"\r\n                ref={register({ required: false })}\r\n            />\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>NOM:</p>\r\n            </div>\r\n            <input\r\n                name='nom'\r\n                value={nom}\r\n                onChange={(e) => setNOM(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.nom && <p className=\"createZone__error\">Campo Requerido...</p>}\r\n\r\n            <div className=\"fieldHeader\">\r\n                <p>País de Origen:</p>\r\n            </div>\r\n            <input\r\n                name='coo'\r\n                value={coo}\r\n                onChange={(e) => setCOO(e.target.value)}\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n            {errors.coo && <p className=\"createZone__error\">Campo Requerido...</p>} */}\r\n\r\n\r\n            <div className=\"createZone__options\">\r\n                <Button\r\n                    className=\"createZone__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Guardar\r\n                </Button>\r\n            </div>\r\n\r\n        </form>\r\n    </div >\r\n    );\r\n}\r\n\r\nexport default AddEditZone;","C:\\Users\\franco.macias\\Documents\\Web\\2021\\whs360-21-01\\src\\Receipts.js",["162","163","164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"173","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"174","line":17,"column":10,"nodeType":"171","messageId":"172","endLine":17,"endColumn":21},{"ruleId":"169","severity":1,"message":"175","line":18,"column":10,"nodeType":"171","messageId":"172","endLine":18,"endColumn":14},{"ruleId":"169","severity":1,"message":"176","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":24},{"ruleId":"169","severity":1,"message":"177","line":20,"column":14,"nodeType":"171","messageId":"172","endLine":20,"endColumn":20},{"ruleId":"169","severity":1,"message":"178","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":14},{"ruleId":"169","severity":1,"message":"179","line":22,"column":37,"nodeType":"171","messageId":"172","endLine":22,"endColumn":42},{"ruleId":"169","severity":1,"message":"180","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":18},{"ruleId":"169","severity":1,"message":"181","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":32},{"ruleId":"169","severity":1,"message":"182","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":16},{"ruleId":"169","severity":1,"message":"183","line":12,"column":26,"nodeType":"171","messageId":"172","endLine":12,"endColumn":40},{"ruleId":"169","severity":1,"message":"184","line":12,"column":42,"nodeType":"171","messageId":"172","endLine":12,"endColumn":55},{"ruleId":"169","severity":1,"message":"185","line":63,"column":14,"nodeType":"171","messageId":"172","endLine":63,"endColumn":24},{"ruleId":"169","severity":1,"message":"186","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":19},{"ruleId":"169","severity":1,"message":"187","line":12,"column":8,"nodeType":"171","messageId":"172","endLine":12,"endColumn":19},{"ruleId":"169","severity":1,"message":"188","line":20,"column":11,"nodeType":"171","messageId":"172","endLine":20,"endColumn":18},{"ruleId":"169","severity":1,"message":"179","line":22,"column":37,"nodeType":"171","messageId":"172","endLine":22,"endColumn":42},{"ruleId":"169","severity":1,"message":"187","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":19},{"ruleId":"169","severity":1,"message":"188","line":17,"column":11,"nodeType":"171","messageId":"172","endLine":17,"endColumn":18},{"ruleId":"169","severity":1,"message":"189","line":20,"column":11,"nodeType":"171","messageId":"172","endLine":20,"endColumn":19},{"ruleId":"169","severity":1,"message":"179","line":24,"column":37,"nodeType":"171","messageId":"172","endLine":24,"endColumn":42},{"ruleId":"169","severity":1,"message":"186","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":19},{"ruleId":"169","severity":1,"message":"187","line":12,"column":8,"nodeType":"171","messageId":"172","endLine":12,"endColumn":19},{"ruleId":"169","severity":1,"message":"188","line":20,"column":11,"nodeType":"171","messageId":"172","endLine":20,"endColumn":18},{"ruleId":"169","severity":1,"message":"188","line":18,"column":11,"nodeType":"171","messageId":"172","endLine":18,"endColumn":18},{"ruleId":"169","severity":1,"message":"190","line":21,"column":11,"nodeType":"171","messageId":"172","endLine":21,"endColumn":19},{"ruleId":"169","severity":1,"message":"179","line":22,"column":37,"nodeType":"171","messageId":"172","endLine":22,"endColumn":42},{"ruleId":"169","severity":1,"message":"179","line":24,"column":37,"nodeType":"171","messageId":"172","endLine":24,"endColumn":42},{"ruleId":"169","severity":1,"message":"191","line":18,"column":23,"nodeType":"171","messageId":"172","endLine":18,"endColumn":35},{"ruleId":"169","severity":1,"message":"179","line":18,"column":37,"nodeType":"171","messageId":"172","endLine":18,"endColumn":42},{"ruleId":"169","severity":1,"message":"192","line":18,"column":44,"nodeType":"171","messageId":"172","endLine":18,"endColumn":50},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Body' is defined but never used.","'useDispatch' is defined but never used.","'auth' is defined but never used.","'ViewHeadlineIcon' is defined but never used.","'alerta' is defined but never used.","'Header' is defined but never used.","'watch' is assigned a value but never used.","'PersonIcon' is defined but never used.","'SettingsApplicationsIcon' is defined but never used.","'EditIcon' is defined but never used.","'selectOpenPart' is defined but never used.","'changeToEditP' is defined but never used.","'editClient' is defined but never used.","'DetailsIcon' is defined but never used.","'ListAltIcon' is defined but never used.","'history' is assigned a value but never used.","'openPart' is assigned a value but never used.","'openZone' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]